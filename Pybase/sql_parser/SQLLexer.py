# Generated from SQL.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;")
        buf.write("\u01b0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3")
        buf.write("\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)")
        buf.write("\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3")
        buf.write("-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\63")
        buf.write("\3\63\3\63\3\64\3\64\3\64\3\65\3\65\7\65\u0181\n\65\f")
        buf.write("\65\16\65\u0184\13\65\3\66\6\66\u0187\n\66\r\66\16\66")
        buf.write("\u0188\3\67\3\67\7\67\u018d\n\67\f\67\16\67\u0190\13\67")
        buf.write("\3\67\3\67\38\58\u0195\n8\38\68\u0198\n8\r8\168\u0199")
        buf.write("\38\38\78\u019e\n8\f8\168\u01a1\138\39\69\u01a4\n9\r9")
        buf.write("\169\u01a5\39\39\3:\3:\3:\6:\u01ad\n:\r:\16:\u01ae\2\2")
        buf.write(";\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;")
        buf.write("\3\2\b\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\3\2))\5\2\13")
        buf.write("\f\17\17\"\"\3\2==\2\u01b7\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2")
        buf.write("\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2")
        buf.write("\2\5w\3\2\2\2\7|\3\2\2\2\t\u0086\3\2\2\2\13\u008d\3\2")
        buf.write("\2\2\r\u0096\3\2\2\2\17\u009b\3\2\2\2\21\u009f\3\2\2\2")
        buf.write("\23\u00a6\3\2\2\2\25\u00ac\3\2\2\2\27\u00ae\3\2\2\2\31")
        buf.write("\u00b0\3\2\2\2\33\u00b5\3\2\2\2\35\u00bc\3\2\2\2\37\u00c1")
        buf.write("\3\2\2\2!\u00c8\3\2\2\2#\u00cf\3\2\2\2%\u00d4\3\2\2\2")
        buf.write("\'\u00da\3\2\2\2)\u00e1\3\2\2\2+\u00e5\3\2\2\2-\u00ec")
        buf.write("\3\2\2\2/\u00f2\3\2\2\2\61\u00f5\3\2\2\2\63\u00fb\3\2")
        buf.write("\2\2\65\u00ff\3\2\2\2\67\u0106\3\2\2\29\u010d\3\2\2\2")
        buf.write(";\u0110\3\2\2\2=\u0118\3\2\2\2?\u011c\3\2\2\2A\u0124\3")
        buf.write("\2\2\2C\u012f\3\2\2\2E\u013a\3\2\2\2G\u013c\3\2\2\2I\u0140")
        buf.write("\3\2\2\2K\u0145\3\2\2\2M\u014d\3\2\2\2O\u0151\3\2\2\2")
        buf.write("Q\u0159\3\2\2\2S\u015e\3\2\2\2U\u0164\3\2\2\2W\u0168\3")
        buf.write("\2\2\2Y\u016b\3\2\2\2[\u016d\3\2\2\2]\u016f\3\2\2\2_\u0171")
        buf.write("\3\2\2\2a\u0173\3\2\2\2c\u0176\3\2\2\2e\u0178\3\2\2\2")
        buf.write("g\u017b\3\2\2\2i\u017e\3\2\2\2k\u0186\3\2\2\2m\u018a\3")
        buf.write("\2\2\2o\u0194\3\2\2\2q\u01a3\3\2\2\2s\u01a9\3\2\2\2uv")
        buf.write("\7=\2\2v\4\3\2\2\2wx\7U\2\2xy\7J\2\2yz\7Q\2\2z{\7Y\2\2")
        buf.write("{\6\3\2\2\2|}\7F\2\2}~\7C\2\2~\177\7V\2\2\177\u0080\7")
        buf.write("C\2\2\u0080\u0081\7D\2\2\u0081\u0082\7C\2\2\u0082\u0083")
        buf.write("\7U\2\2\u0083\u0084\7G\2\2\u0084\u0085\7U\2\2\u0085\b")
        buf.write("\3\2\2\2\u0086\u0087\7E\2\2\u0087\u0088\7T\2\2\u0088\u0089")
        buf.write("\7G\2\2\u0089\u008a\7C\2\2\u008a\u008b\7V\2\2\u008b\u008c")
        buf.write("\7G\2\2\u008c\n\3\2\2\2\u008d\u008e\7F\2\2\u008e\u008f")
        buf.write("\7C\2\2\u008f\u0090\7V\2\2\u0090\u0091\7C\2\2\u0091\u0092")
        buf.write("\7D\2\2\u0092\u0093\7C\2\2\u0093\u0094\7U\2\2\u0094\u0095")
        buf.write("\7G\2\2\u0095\f\3\2\2\2\u0096\u0097\7F\2\2\u0097\u0098")
        buf.write("\7T\2\2\u0098\u0099\7Q\2\2\u0099\u009a\7R\2\2\u009a\16")
        buf.write("\3\2\2\2\u009b\u009c\7W\2\2\u009c\u009d\7U\2\2\u009d\u009e")
        buf.write("\7G\2\2\u009e\20\3\2\2\2\u009f\u00a0\7V\2\2\u00a0\u00a1")
        buf.write("\7C\2\2\u00a1\u00a2\7D\2\2\u00a2\u00a3\7N\2\2\u00a3\u00a4")
        buf.write("\7G\2\2\u00a4\u00a5\7U\2\2\u00a5\22\3\2\2\2\u00a6\u00a7")
        buf.write("\7V\2\2\u00a7\u00a8\7C\2\2\u00a8\u00a9\7D\2\2\u00a9\u00aa")
        buf.write("\7N\2\2\u00aa\u00ab\7G\2\2\u00ab\24\3\2\2\2\u00ac\u00ad")
        buf.write("\7*\2\2\u00ad\26\3\2\2\2\u00ae\u00af\7+\2\2\u00af\30\3")
        buf.write("\2\2\2\u00b0\u00b1\7F\2\2\u00b1\u00b2\7G\2\2\u00b2\u00b3")
        buf.write("\7U\2\2\u00b3\u00b4\7E\2\2\u00b4\32\3\2\2\2\u00b5\u00b6")
        buf.write("\7K\2\2\u00b6\u00b7\7P\2\2\u00b7\u00b8\7U\2\2\u00b8\u00b9")
        buf.write("\7G\2\2\u00b9\u00ba\7T\2\2\u00ba\u00bb\7V\2\2\u00bb\34")
        buf.write("\3\2\2\2\u00bc\u00bd\7K\2\2\u00bd\u00be\7P\2\2\u00be\u00bf")
        buf.write("\7V\2\2\u00bf\u00c0\7Q\2\2\u00c0\36\3\2\2\2\u00c1\u00c2")
        buf.write("\7X\2\2\u00c2\u00c3\7C\2\2\u00c3\u00c4\7N\2\2\u00c4\u00c5")
        buf.write("\7W\2\2\u00c5\u00c6\7G\2\2\u00c6\u00c7\7U\2\2\u00c7 \3")
        buf.write("\2\2\2\u00c8\u00c9\7F\2\2\u00c9\u00ca\7G\2\2\u00ca\u00cb")
        buf.write("\7N\2\2\u00cb\u00cc\7G\2\2\u00cc\u00cd\7V\2\2\u00cd\u00ce")
        buf.write("\7G\2\2\u00ce\"\3\2\2\2\u00cf\u00d0\7H\2\2\u00d0\u00d1")
        buf.write("\7T\2\2\u00d1\u00d2\7Q\2\2\u00d2\u00d3\7O\2\2\u00d3$\3")
        buf.write("\2\2\2\u00d4\u00d5\7Y\2\2\u00d5\u00d6\7J\2\2\u00d6\u00d7")
        buf.write("\7G\2\2\u00d7\u00d8\7T\2\2\u00d8\u00d9\7G\2\2\u00d9&\3")
        buf.write("\2\2\2\u00da\u00db\7W\2\2\u00db\u00dc\7R\2\2\u00dc\u00dd")
        buf.write("\7F\2\2\u00dd\u00de\7C\2\2\u00de\u00df\7V\2\2\u00df\u00e0")
        buf.write("\7G\2\2\u00e0(\3\2\2\2\u00e1\u00e2\7U\2\2\u00e2\u00e3")
        buf.write("\7G\2\2\u00e3\u00e4\7V\2\2\u00e4*\3\2\2\2\u00e5\u00e6")
        buf.write("\7U\2\2\u00e6\u00e7\7G\2\2\u00e7\u00e8\7N\2\2\u00e8\u00e9")
        buf.write("\7G\2\2\u00e9\u00ea\7E\2\2\u00ea\u00eb\7V\2\2\u00eb,\3")
        buf.write("\2\2\2\u00ec\u00ed\7K\2\2\u00ed\u00ee\7P\2\2\u00ee\u00ef")
        buf.write("\7F\2\2\u00ef\u00f0\7G\2\2\u00f0\u00f1\7Z\2\2\u00f1.\3")
        buf.write("\2\2\2\u00f2\u00f3\7Q\2\2\u00f3\u00f4\7P\2\2\u00f4\60")
        buf.write("\3\2\2\2\u00f5\u00f6\7C\2\2\u00f6\u00f7\7N\2\2\u00f7\u00f8")
        buf.write("\7V\2\2\u00f8\u00f9\7G\2\2\u00f9\u00fa\7T\2\2\u00fa\62")
        buf.write("\3\2\2\2\u00fb\u00fc\7C\2\2\u00fc\u00fd\7F\2\2\u00fd\u00fe")
        buf.write("\7F\2\2\u00fe\64\3\2\2\2\u00ff\u0100\7E\2\2\u0100\u0101")
        buf.write("\7J\2\2\u0101\u0102\7C\2\2\u0102\u0103\7P\2\2\u0103\u0104")
        buf.write("\7I\2\2\u0104\u0105\7G\2\2\u0105\66\3\2\2\2\u0106\u0107")
        buf.write("\7T\2\2\u0107\u0108\7G\2\2\u0108\u0109\7P\2\2\u0109\u010a")
        buf.write("\7C\2\2\u010a\u010b\7O\2\2\u010b\u010c\7G\2\2\u010c8\3")
        buf.write("\2\2\2\u010d\u010e\7V\2\2\u010e\u010f\7Q\2\2\u010f:\3")
        buf.write("\2\2\2\u0110\u0111\7R\2\2\u0111\u0112\7T\2\2\u0112\u0113")
        buf.write("\7K\2\2\u0113\u0114\7O\2\2\u0114\u0115\7C\2\2\u0115\u0116")
        buf.write("\7T\2\2\u0116\u0117\7[\2\2\u0117<\3\2\2\2\u0118\u0119")
        buf.write("\7M\2\2\u0119\u011a\7G\2\2\u011a\u011b\7[\2\2\u011b>\3")
        buf.write("\2\2\2\u011c\u011d\7H\2\2\u011d\u011e\7Q\2\2\u011e\u011f")
        buf.write("\7T\2\2\u011f\u0120\7G\2\2\u0120\u0121\7K\2\2\u0121\u0122")
        buf.write("\7I\2\2\u0122\u0123\7P\2\2\u0123@\3\2\2\2\u0124\u0125")
        buf.write("\7E\2\2\u0125\u0126\7Q\2\2\u0126\u0127\7P\2\2\u0127\u0128")
        buf.write("\7U\2\2\u0128\u0129\7V\2\2\u0129\u012a\7T\2\2\u012a\u012b")
        buf.write("\7C\2\2\u012b\u012c\7K\2\2\u012c\u012d\7P\2\2\u012d\u012e")
        buf.write("\7V\2\2\u012eB\3\2\2\2\u012f\u0130\7T\2\2\u0130\u0131")
        buf.write("\7G\2\2\u0131\u0132\7H\2\2\u0132\u0133\7G\2\2\u0133\u0134")
        buf.write("\7T\2\2\u0134\u0135\7G\2\2\u0135\u0136\7P\2\2\u0136\u0137")
        buf.write("\7E\2\2\u0137\u0138\7G\2\2\u0138\u0139\7U\2\2\u0139D\3")
        buf.write("\2\2\2\u013a\u013b\7.\2\2\u013bF\3\2\2\2\u013c\u013d\7")
        buf.write("P\2\2\u013d\u013e\7Q\2\2\u013e\u013f\7V\2\2\u013fH\3\2")
        buf.write("\2\2\u0140\u0141\7P\2\2\u0141\u0142\7W\2\2\u0142\u0143")
        buf.write("\7N\2\2\u0143\u0144\7N\2\2\u0144J\3\2\2\2\u0145\u0146")
        buf.write("\7F\2\2\u0146\u0147\7G\2\2\u0147\u0148\7H\2\2\u0148\u0149")
        buf.write("\7C\2\2\u0149\u014a\7W\2\2\u014a\u014b\7N\2\2\u014b\u014c")
        buf.write("\7V\2\2\u014cL\3\2\2\2\u014d\u014e\7K\2\2\u014e\u014f")
        buf.write("\7P\2\2\u014f\u0150\7V\2\2\u0150N\3\2\2\2\u0151\u0152")
        buf.write("\7X\2\2\u0152\u0153\7C\2\2\u0153\u0154\7T\2\2\u0154\u0155")
        buf.write("\7E\2\2\u0155\u0156\7J\2\2\u0156\u0157\7C\2\2\u0157\u0158")
        buf.write("\7T\2\2\u0158P\3\2\2\2\u0159\u015a\7F\2\2\u015a\u015b")
        buf.write("\7C\2\2\u015b\u015c\7V\2\2\u015c\u015d\7G\2\2\u015dR\3")
        buf.write("\2\2\2\u015e\u015f\7H\2\2\u015f\u0160\7N\2\2\u0160\u0161")
        buf.write("\7Q\2\2\u0161\u0162\7C\2\2\u0162\u0163\7V\2\2\u0163T\3")
        buf.write("\2\2\2\u0164\u0165\7C\2\2\u0165\u0166\7P\2\2\u0166\u0167")
        buf.write("\7F\2\2\u0167V\3\2\2\2\u0168\u0169\7K\2\2\u0169\u016a")
        buf.write("\7U\2\2\u016aX\3\2\2\2\u016b\u016c\7\60\2\2\u016cZ\3\2")
        buf.write("\2\2\u016d\u016e\7,\2\2\u016e\\\3\2\2\2\u016f\u0170\7")
        buf.write("?\2\2\u0170^\3\2\2\2\u0171\u0172\7>\2\2\u0172`\3\2\2\2")
        buf.write("\u0173\u0174\7>\2\2\u0174\u0175\7?\2\2\u0175b\3\2\2\2")
        buf.write("\u0176\u0177\7@\2\2\u0177d\3\2\2\2\u0178\u0179\7@\2\2")
        buf.write("\u0179\u017a\7?\2\2\u017af\3\2\2\2\u017b\u017c\7>\2\2")
        buf.write("\u017c\u017d\7@\2\2\u017dh\3\2\2\2\u017e\u0182\t\2\2\2")
        buf.write("\u017f\u0181\t\3\2\2\u0180\u017f\3\2\2\2\u0181\u0184\3")
        buf.write("\2\2\2\u0182\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183j")
        buf.write("\3\2\2\2\u0184\u0182\3\2\2\2\u0185\u0187\t\4\2\2\u0186")
        buf.write("\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0186\3\2\2\2")
        buf.write("\u0188\u0189\3\2\2\2\u0189l\3\2\2\2\u018a\u018e\7)\2\2")
        buf.write("\u018b\u018d\n\5\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3")
        buf.write("\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0191")
        buf.write("\3\2\2\2\u0190\u018e\3\2\2\2\u0191\u0192\7)\2\2\u0192")
        buf.write("n\3\2\2\2\u0193\u0195\7/\2\2\u0194\u0193\3\2\2\2\u0194")
        buf.write("\u0195\3\2\2\2\u0195\u0197\3\2\2\2\u0196\u0198\t\4\2\2")
        buf.write("\u0197\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u0197\3")
        buf.write("\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019f")
        buf.write("\7\60\2\2\u019c\u019e\t\4\2\2\u019d\u019c\3\2\2\2\u019e")
        buf.write("\u01a1\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2")
        buf.write("\u01a0p\3\2\2\2\u01a1\u019f\3\2\2\2\u01a2\u01a4\t\6\2")
        buf.write("\2\u01a3\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a3")
        buf.write("\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7")
        buf.write("\u01a8\b9\2\2\u01a8r\3\2\2\2\u01a9\u01aa\7/\2\2\u01aa")
        buf.write("\u01ac\7/\2\2\u01ab\u01ad\n\7\2\2\u01ac\u01ab\3\2\2\2")
        buf.write("\u01ad\u01ae\3\2\2\2\u01ae\u01ac\3\2\2\2\u01ae\u01af\3")
        buf.write("\2\2\2\u01aft\3\2\2\2\13\2\u0182\u0188\u018e\u0194\u0199")
        buf.write("\u019f\u01a5\u01ae\3\b\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    EqualOrAssign = 46
    Less = 47
    LessEqual = 48
    Greater = 49
    GreaterEqual = 50
    NotEqual = 51
    Identifier = 52
    Integer = 53
    String = 54
    Float = 55
    Whitespace = 56
    Annotation = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'INDEX'", "'ON'", "'ALTER'", "'ADD'", 
            "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", "'FOREIGN'", 
            "'CONSTRAINT'", "'REFERENCES'", "','", "'NOT'", "'NULL'", "'DEFAULT'", 
            "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", "'IS'", 
            "'.'", "'*'", "'='", "'<'", "'<='", "'>'", "'>='", "'<>'" ]

    symbolicNames = [ "<INVALID>",
            "EqualOrAssign", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "NotEqual", "Identifier", "Integer", "String", "Float", "Whitespace", 
            "Annotation" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "EqualOrAssign", "Less", "LessEqual", "Greater", 
                  "GreaterEqual", "NotEqual", "Identifier", "Integer", "String", 
                  "Float", "Whitespace", "Annotation" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


