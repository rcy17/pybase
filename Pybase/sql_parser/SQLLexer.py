# Generated from SQL.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2B")
        buf.write("\u01de\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\3")
        buf.write("\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3")
        buf.write("\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3")
        buf.write("#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)")
        buf.write("\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3")
        buf.write(".\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3")
        buf.write("\63\3\63\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67")
        buf.write("\3\67\3\67\3\67\3\67\3\67\38\38\38\38\39\39\39\39\3:\3")
        buf.write(":\3:\3:\3;\3;\7;\u01a9\n;\f;\16;\u01ac\13;\3<\6<\u01af")
        buf.write("\n<\r<\16<\u01b0\3=\3=\7=\u01b5\n=\f=\16=\u01b8\13=\3")
        buf.write("=\3=\3>\5>\u01bd\n>\3>\6>\u01c0\n>\r>\16>\u01c1\3>\3>")
        buf.write("\7>\u01c6\n>\f>\16>\u01c9\13>\3?\6?\u01cc\n?\r?\16?\u01cd")
        buf.write("\3?\3?\3@\3@\3@\6@\u01d5\n@\r@\16@\u01d6\3A\3A\3A\3A\5")
        buf.write("A\u01dd\nA\2\2B\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65")
        buf.write("i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\3\2\b\5\2C\\aa")
        buf.write("c|\6\2\62;C\\aac|\3\2\62;\3\2))\5\2\13\f\17\17\"\"\3\2")
        buf.write("==\2\u01e8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2")
        buf.write("o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2")
        buf.write("\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081")
        buf.write("\3\2\2\2\3\u0083\3\2\2\2\5\u0085\3\2\2\2\7\u008a\3\2\2")
        buf.write("\2\t\u0094\3\2\2\2\13\u009b\3\2\2\2\r\u00a4\3\2\2\2\17")
        buf.write("\u00a9\3\2\2\2\21\u00ad\3\2\2\2\23\u00b4\3\2\2\2\25\u00ba")
        buf.write("\3\2\2\2\27\u00bc\3\2\2\2\31\u00be\3\2\2\2\33\u00c3\3")
        buf.write("\2\2\2\35\u00ca\3\2\2\2\37\u00cf\3\2\2\2!\u00d6\3\2\2")
        buf.write("\2#\u00dd\3\2\2\2%\u00e2\3\2\2\2\'\u00e8\3\2\2\2)\u00ef")
        buf.write("\3\2\2\2+\u00f3\3\2\2\2-\u00fa\3\2\2\2/\u0100\3\2\2\2")
        buf.write("\61\u0103\3\2\2\2\63\u0109\3\2\2\2\65\u010d\3\2\2\2\67")
        buf.write("\u0114\3\2\2\29\u011b\3\2\2\2;\u011e\3\2\2\2=\u0126\3")
        buf.write("\2\2\2?\u012a\3\2\2\2A\u0132\3\2\2\2C\u013d\3\2\2\2E\u0148")
        buf.write("\3\2\2\2G\u014a\3\2\2\2I\u014e\3\2\2\2K\u0153\3\2\2\2")
        buf.write("M\u015b\3\2\2\2O\u015f\3\2\2\2Q\u0167\3\2\2\2S\u016c\3")
        buf.write("\2\2\2U\u0172\3\2\2\2W\u0176\3\2\2\2Y\u0179\3\2\2\2[\u017c")
        buf.write("\3\2\2\2]\u0181\3\2\2\2_\u0183\3\2\2\2a\u0185\3\2\2\2")
        buf.write("c\u0187\3\2\2\2e\u0189\3\2\2\2g\u018c\3\2\2\2i\u018e\3")
        buf.write("\2\2\2k\u0191\3\2\2\2m\u0194\3\2\2\2o\u019a\3\2\2\2q\u019e")
        buf.write("\3\2\2\2s\u01a2\3\2\2\2u\u01a6\3\2\2\2w\u01ae\3\2\2\2")
        buf.write("y\u01b2\3\2\2\2{\u01bc\3\2\2\2}\u01cb\3\2\2\2\177\u01d1")
        buf.write("\3\2\2\2\u0081\u01dc\3\2\2\2\u0083\u0084\7=\2\2\u0084")
        buf.write("\4\3\2\2\2\u0085\u0086\7U\2\2\u0086\u0087\7J\2\2\u0087")
        buf.write("\u0088\7Q\2\2\u0088\u0089\7Y\2\2\u0089\6\3\2\2\2\u008a")
        buf.write("\u008b\7F\2\2\u008b\u008c\7C\2\2\u008c\u008d\7V\2\2\u008d")
        buf.write("\u008e\7C\2\2\u008e\u008f\7D\2\2\u008f\u0090\7C\2\2\u0090")
        buf.write("\u0091\7U\2\2\u0091\u0092\7G\2\2\u0092\u0093\7U\2\2\u0093")
        buf.write("\b\3\2\2\2\u0094\u0095\7E\2\2\u0095\u0096\7T\2\2\u0096")
        buf.write("\u0097\7G\2\2\u0097\u0098\7C\2\2\u0098\u0099\7V\2\2\u0099")
        buf.write("\u009a\7G\2\2\u009a\n\3\2\2\2\u009b\u009c\7F\2\2\u009c")
        buf.write("\u009d\7C\2\2\u009d\u009e\7V\2\2\u009e\u009f\7C\2\2\u009f")
        buf.write("\u00a0\7D\2\2\u00a0\u00a1\7C\2\2\u00a1\u00a2\7U\2\2\u00a2")
        buf.write("\u00a3\7G\2\2\u00a3\f\3\2\2\2\u00a4\u00a5\7F\2\2\u00a5")
        buf.write("\u00a6\7T\2\2\u00a6\u00a7\7Q\2\2\u00a7\u00a8\7R\2\2\u00a8")
        buf.write("\16\3\2\2\2\u00a9\u00aa\7W\2\2\u00aa\u00ab\7U\2\2\u00ab")
        buf.write("\u00ac\7G\2\2\u00ac\20\3\2\2\2\u00ad\u00ae\7V\2\2\u00ae")
        buf.write("\u00af\7C\2\2\u00af\u00b0\7D\2\2\u00b0\u00b1\7N\2\2\u00b1")
        buf.write("\u00b2\7G\2\2\u00b2\u00b3\7U\2\2\u00b3\22\3\2\2\2\u00b4")
        buf.write("\u00b5\7V\2\2\u00b5\u00b6\7C\2\2\u00b6\u00b7\7D\2\2\u00b7")
        buf.write("\u00b8\7N\2\2\u00b8\u00b9\7G\2\2\u00b9\24\3\2\2\2\u00ba")
        buf.write("\u00bb\7*\2\2\u00bb\26\3\2\2\2\u00bc\u00bd\7+\2\2\u00bd")
        buf.write("\30\3\2\2\2\u00be\u00bf\7F\2\2\u00bf\u00c0\7G\2\2\u00c0")
        buf.write("\u00c1\7U\2\2\u00c1\u00c2\7E\2\2\u00c2\32\3\2\2\2\u00c3")
        buf.write("\u00c4\7K\2\2\u00c4\u00c5\7P\2\2\u00c5\u00c6\7U\2\2\u00c6")
        buf.write("\u00c7\7G\2\2\u00c7\u00c8\7T\2\2\u00c8\u00c9\7V\2\2\u00c9")
        buf.write("\34\3\2\2\2\u00ca\u00cb\7K\2\2\u00cb\u00cc\7P\2\2\u00cc")
        buf.write("\u00cd\7V\2\2\u00cd\u00ce\7Q\2\2\u00ce\36\3\2\2\2\u00cf")
        buf.write("\u00d0\7X\2\2\u00d0\u00d1\7C\2\2\u00d1\u00d2\7N\2\2\u00d2")
        buf.write("\u00d3\7W\2\2\u00d3\u00d4\7G\2\2\u00d4\u00d5\7U\2\2\u00d5")
        buf.write(" \3\2\2\2\u00d6\u00d7\7F\2\2\u00d7\u00d8\7G\2\2\u00d8")
        buf.write("\u00d9\7N\2\2\u00d9\u00da\7G\2\2\u00da\u00db\7V\2\2\u00db")
        buf.write("\u00dc\7G\2\2\u00dc\"\3\2\2\2\u00dd\u00de\7H\2\2\u00de")
        buf.write("\u00df\7T\2\2\u00df\u00e0\7Q\2\2\u00e0\u00e1\7O\2\2\u00e1")
        buf.write("$\3\2\2\2\u00e2\u00e3\7Y\2\2\u00e3\u00e4\7J\2\2\u00e4")
        buf.write("\u00e5\7G\2\2\u00e5\u00e6\7T\2\2\u00e6\u00e7\7G\2\2\u00e7")
        buf.write("&\3\2\2\2\u00e8\u00e9\7W\2\2\u00e9\u00ea\7R\2\2\u00ea")
        buf.write("\u00eb\7F\2\2\u00eb\u00ec\7C\2\2\u00ec\u00ed\7V\2\2\u00ed")
        buf.write("\u00ee\7G\2\2\u00ee(\3\2\2\2\u00ef\u00f0\7U\2\2\u00f0")
        buf.write("\u00f1\7G\2\2\u00f1\u00f2\7V\2\2\u00f2*\3\2\2\2\u00f3")
        buf.write("\u00f4\7U\2\2\u00f4\u00f5\7G\2\2\u00f5\u00f6\7N\2\2\u00f6")
        buf.write("\u00f7\7G\2\2\u00f7\u00f8\7E\2\2\u00f8\u00f9\7V\2\2\u00f9")
        buf.write(",\3\2\2\2\u00fa\u00fb\7K\2\2\u00fb\u00fc\7P\2\2\u00fc")
        buf.write("\u00fd\7F\2\2\u00fd\u00fe\7G\2\2\u00fe\u00ff\7Z\2\2\u00ff")
        buf.write(".\3\2\2\2\u0100\u0101\7Q\2\2\u0101\u0102\7P\2\2\u0102")
        buf.write("\60\3\2\2\2\u0103\u0104\7C\2\2\u0104\u0105\7N\2\2\u0105")
        buf.write("\u0106\7V\2\2\u0106\u0107\7G\2\2\u0107\u0108\7T\2\2\u0108")
        buf.write("\62\3\2\2\2\u0109\u010a\7C\2\2\u010a\u010b\7F\2\2\u010b")
        buf.write("\u010c\7F\2\2\u010c\64\3\2\2\2\u010d\u010e\7E\2\2\u010e")
        buf.write("\u010f\7J\2\2\u010f\u0110\7C\2\2\u0110\u0111\7P\2\2\u0111")
        buf.write("\u0112\7I\2\2\u0112\u0113\7G\2\2\u0113\66\3\2\2\2\u0114")
        buf.write("\u0115\7T\2\2\u0115\u0116\7G\2\2\u0116\u0117\7P\2\2\u0117")
        buf.write("\u0118\7C\2\2\u0118\u0119\7O\2\2\u0119\u011a\7G\2\2\u011a")
        buf.write("8\3\2\2\2\u011b\u011c\7V\2\2\u011c\u011d\7Q\2\2\u011d")
        buf.write(":\3\2\2\2\u011e\u011f\7R\2\2\u011f\u0120\7T\2\2\u0120")
        buf.write("\u0121\7K\2\2\u0121\u0122\7O\2\2\u0122\u0123\7C\2\2\u0123")
        buf.write("\u0124\7T\2\2\u0124\u0125\7[\2\2\u0125<\3\2\2\2\u0126")
        buf.write("\u0127\7M\2\2\u0127\u0128\7G\2\2\u0128\u0129\7[\2\2\u0129")
        buf.write(">\3\2\2\2\u012a\u012b\7H\2\2\u012b\u012c\7Q\2\2\u012c")
        buf.write("\u012d\7T\2\2\u012d\u012e\7G\2\2\u012e\u012f\7K\2\2\u012f")
        buf.write("\u0130\7I\2\2\u0130\u0131\7P\2\2\u0131@\3\2\2\2\u0132")
        buf.write("\u0133\7E\2\2\u0133\u0134\7Q\2\2\u0134\u0135\7P\2\2\u0135")
        buf.write("\u0136\7U\2\2\u0136\u0137\7V\2\2\u0137\u0138\7T\2\2\u0138")
        buf.write("\u0139\7C\2\2\u0139\u013a\7K\2\2\u013a\u013b\7P\2\2\u013b")
        buf.write("\u013c\7V\2\2\u013cB\3\2\2\2\u013d\u013e\7T\2\2\u013e")
        buf.write("\u013f\7G\2\2\u013f\u0140\7H\2\2\u0140\u0141\7G\2\2\u0141")
        buf.write("\u0142\7T\2\2\u0142\u0143\7G\2\2\u0143\u0144\7P\2\2\u0144")
        buf.write("\u0145\7E\2\2\u0145\u0146\7G\2\2\u0146\u0147\7U\2\2\u0147")
        buf.write("D\3\2\2\2\u0148\u0149\7.\2\2\u0149F\3\2\2\2\u014a\u014b")
        buf.write("\7P\2\2\u014b\u014c\7Q\2\2\u014c\u014d\7V\2\2\u014dH\3")
        buf.write("\2\2\2\u014e\u014f\7P\2\2\u014f\u0150\7W\2\2\u0150\u0151")
        buf.write("\7N\2\2\u0151\u0152\7N\2\2\u0152J\3\2\2\2\u0153\u0154")
        buf.write("\7F\2\2\u0154\u0155\7G\2\2\u0155\u0156\7H\2\2\u0156\u0157")
        buf.write("\7C\2\2\u0157\u0158\7W\2\2\u0158\u0159\7N\2\2\u0159\u015a")
        buf.write("\7V\2\2\u015aL\3\2\2\2\u015b\u015c\7K\2\2\u015c\u015d")
        buf.write("\7P\2\2\u015d\u015e\7V\2\2\u015eN\3\2\2\2\u015f\u0160")
        buf.write("\7X\2\2\u0160\u0161\7C\2\2\u0161\u0162\7T\2\2\u0162\u0163")
        buf.write("\7E\2\2\u0163\u0164\7J\2\2\u0164\u0165\7C\2\2\u0165\u0166")
        buf.write("\7T\2\2\u0166P\3\2\2\2\u0167\u0168\7F\2\2\u0168\u0169")
        buf.write("\7C\2\2\u0169\u016a\7V\2\2\u016a\u016b\7G\2\2\u016bR\3")
        buf.write("\2\2\2\u016c\u016d\7H\2\2\u016d\u016e\7N\2\2\u016e\u016f")
        buf.write("\7Q\2\2\u016f\u0170\7C\2\2\u0170\u0171\7V\2\2\u0171T\3")
        buf.write("\2\2\2\u0172\u0173\7C\2\2\u0173\u0174\7P\2\2\u0174\u0175")
        buf.write("\7F\2\2\u0175V\3\2\2\2\u0176\u0177\7K\2\2\u0177\u0178")
        buf.write("\7U\2\2\u0178X\3\2\2\2\u0179\u017a\7K\2\2\u017a\u017b")
        buf.write("\7P\2\2\u017bZ\3\2\2\2\u017c\u017d\7N\2\2\u017d\u017e")
        buf.write("\7K\2\2\u017e\u017f\7M\2\2\u017f\u0180\7G\2\2\u0180\\")
        buf.write("\3\2\2\2\u0181\u0182\7\60\2\2\u0182^\3\2\2\2\u0183\u0184")
        buf.write("\7,\2\2\u0184`\3\2\2\2\u0185\u0186\7?\2\2\u0186b\3\2\2")
        buf.write("\2\u0187\u0188\7>\2\2\u0188d\3\2\2\2\u0189\u018a\7>\2")
        buf.write("\2\u018a\u018b\7?\2\2\u018bf\3\2\2\2\u018c\u018d\7@\2")
        buf.write("\2\u018dh\3\2\2\2\u018e\u018f\7@\2\2\u018f\u0190\7?\2")
        buf.write("\2\u0190j\3\2\2\2\u0191\u0192\7>\2\2\u0192\u0193\7@\2")
        buf.write("\2\u0193l\3\2\2\2\u0194\u0195\7E\2\2\u0195\u0196\7Q\2")
        buf.write("\2\u0196\u0197\7W\2\2\u0197\u0198\7P\2\2\u0198\u0199\7")
        buf.write("V\2\2\u0199n\3\2\2\2\u019a\u019b\7C\2\2\u019b\u019c\7")
        buf.write("X\2\2\u019c\u019d\7I\2\2\u019dp\3\2\2\2\u019e\u019f\7")
        buf.write("O\2\2\u019f\u01a0\7C\2\2\u01a0\u01a1\7Z\2\2\u01a1r\3\2")
        buf.write("\2\2\u01a2\u01a3\7O\2\2\u01a3\u01a4\7K\2\2\u01a4\u01a5")
        buf.write("\7P\2\2\u01a5t\3\2\2\2\u01a6\u01aa\t\2\2\2\u01a7\u01a9")
        buf.write("\t\3\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa")
        buf.write("\u01a8\3\2\2\2\u01aa\u01ab\3\2\2\2\u01abv\3\2\2\2\u01ac")
        buf.write("\u01aa\3\2\2\2\u01ad\u01af\t\4\2\2\u01ae\u01ad\3\2\2\2")
        buf.write("\u01af\u01b0\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0\u01b1\3")
        buf.write("\2\2\2\u01b1x\3\2\2\2\u01b2\u01b6\7)\2\2\u01b3\u01b5\n")
        buf.write("\5\2\2\u01b4\u01b3\3\2\2\2\u01b5\u01b8\3\2\2\2\u01b6\u01b4")
        buf.write("\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b9\3\2\2\2\u01b8")
        buf.write("\u01b6\3\2\2\2\u01b9\u01ba\7)\2\2\u01baz\3\2\2\2\u01bb")
        buf.write("\u01bd\7/\2\2\u01bc\u01bb\3\2\2\2\u01bc\u01bd\3\2\2\2")
        buf.write("\u01bd\u01bf\3\2\2\2\u01be\u01c0\t\4\2\2\u01bf\u01be\3")
        buf.write("\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2")
        buf.write("\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c7\7\60\2\2\u01c4")
        buf.write("\u01c6\t\4\2\2\u01c5\u01c4\3\2\2\2\u01c6\u01c9\3\2\2\2")
        buf.write("\u01c7\u01c5\3\2\2\2\u01c7\u01c8\3\2\2\2\u01c8|\3\2\2")
        buf.write("\2\u01c9\u01c7\3\2\2\2\u01ca\u01cc\t\6\2\2\u01cb\u01ca")
        buf.write("\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd\u01cb\3\2\2\2\u01cd")
        buf.write("\u01ce\3\2\2\2\u01ce\u01cf\3\2\2\2\u01cf\u01d0\b?\2\2")
        buf.write("\u01d0~\3\2\2\2\u01d1\u01d2\7/\2\2\u01d2\u01d4\7/\2\2")
        buf.write("\u01d3\u01d5\n\7\2\2\u01d4\u01d3\3\2\2\2\u01d5\u01d6\3")
        buf.write("\2\2\2\u01d6\u01d4\3\2\2\2\u01d6\u01d7\3\2\2\2\u01d7\u0080")
        buf.write("\3\2\2\2\u01d8\u01dd\5m\67\2\u01d9\u01dd\5o8\2\u01da\u01dd")
        buf.write("\5q9\2\u01db\u01dd\5s:\2\u01dc\u01d8\3\2\2\2\u01dc\u01d9")
        buf.write("\3\2\2\2\u01dc\u01da\3\2\2\2\u01dc\u01db\3\2\2\2\u01dd")
        buf.write("\u0082\3\2\2\2\f\2\u01aa\u01b0\u01b6\u01bc\u01c1\u01c7")
        buf.write("\u01cd\u01d6\u01dc\3\b\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    EqualOrAssign = 48
    Less = 49
    LessEqual = 50
    Greater = 51
    GreaterEqual = 52
    NotEqual = 53
    Count = 54
    Average = 55
    Max = 56
    Min = 57
    Identifier = 58
    Integer = 59
    String = 60
    Float = 61
    Whitespace = 62
    Annotation = 63
    Aggregator = 64

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'INDEX'", "'ON'", "'ALTER'", "'ADD'", 
            "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", "'FOREIGN'", 
            "'CONSTRAINT'", "'REFERENCES'", "','", "'NOT'", "'NULL'", "'DEFAULT'", 
            "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", "'IS'", 
            "'IN'", "'LIKE'", "'.'", "'*'", "'='", "'<'", "'<='", "'>'", 
            "'>='", "'<>'", "'COUNT'", "'AVG'", "'MAX'", "'MIN'" ]

    symbolicNames = [ "<INVALID>",
            "EqualOrAssign", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "NotEqual", "Count", "Average", "Max", "Min", "Identifier", 
            "Integer", "String", "Float", "Whitespace", "Annotation", "Aggregator" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "EqualOrAssign", "Less", "LessEqual", 
                  "Greater", "GreaterEqual", "NotEqual", "Count", "Average", 
                  "Max", "Min", "Identifier", "Integer", "String", "Float", 
                  "Whitespace", "Annotation", "Aggregator" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


