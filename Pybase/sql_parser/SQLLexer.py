# Generated from SQL.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2:")
        buf.write("\u01a7\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3")
        buf.write("\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!")
        buf.write("\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)")
        buf.write("\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3")
        buf.write(".\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\63\3\63")
        buf.write("\3\63\3\64\3\64\3\64\3\65\3\65\7\65\u017f\n\65\f\65\16")
        buf.write("\65\u0182\13\65\3\66\6\66\u0185\n\66\r\66\16\66\u0186")
        buf.write("\3\67\3\67\7\67\u018b\n\67\f\67\16\67\u018e\13\67\3\67")
        buf.write("\3\67\38\58\u0193\n8\38\68\u0196\n8\r8\168\u0197\38\3")
        buf.write("8\78\u019c\n8\f8\168\u019f\138\39\69\u01a2\n9\r9\169\u01a3")
        buf.write("\39\39\2\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:\3\2\7\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\3\2")
        buf.write("))\5\2\13\f\17\17\"\"\2\u01ad\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2")
        buf.write("\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2")
        buf.write("\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s\3\2\2\2\5u\3")
        buf.write("\2\2\2\7z\3\2\2\2\t\u0084\3\2\2\2\13\u008b\3\2\2\2\r\u0094")
        buf.write("\3\2\2\2\17\u0099\3\2\2\2\21\u009d\3\2\2\2\23\u00a4\3")
        buf.write("\2\2\2\25\u00aa\3\2\2\2\27\u00ac\3\2\2\2\31\u00ae\3\2")
        buf.write("\2\2\33\u00b3\3\2\2\2\35\u00ba\3\2\2\2\37\u00bf\3\2\2")
        buf.write("\2!\u00c6\3\2\2\2#\u00cd\3\2\2\2%\u00d2\3\2\2\2\'\u00d8")
        buf.write("\3\2\2\2)\u00df\3\2\2\2+\u00e3\3\2\2\2-\u00ea\3\2\2\2")
        buf.write("/\u00f0\3\2\2\2\61\u00f3\3\2\2\2\63\u00f9\3\2\2\2\65\u00fd")
        buf.write("\3\2\2\2\67\u0104\3\2\2\29\u010b\3\2\2\2;\u010e\3\2\2")
        buf.write("\2=\u0116\3\2\2\2?\u011a\3\2\2\2A\u0122\3\2\2\2C\u012d")
        buf.write("\3\2\2\2E\u0138\3\2\2\2G\u013a\3\2\2\2I\u013e\3\2\2\2")
        buf.write("K\u0143\3\2\2\2M\u014b\3\2\2\2O\u014f\3\2\2\2Q\u0157\3")
        buf.write("\2\2\2S\u015c\3\2\2\2U\u0162\3\2\2\2W\u0166\3\2\2\2Y\u0169")
        buf.write("\3\2\2\2[\u016b\3\2\2\2]\u016d\3\2\2\2_\u016f\3\2\2\2")
        buf.write("a\u0171\3\2\2\2c\u0174\3\2\2\2e\u0176\3\2\2\2g\u0179\3")
        buf.write("\2\2\2i\u017c\3\2\2\2k\u0184\3\2\2\2m\u0188\3\2\2\2o\u0192")
        buf.write("\3\2\2\2q\u01a1\3\2\2\2st\7=\2\2t\4\3\2\2\2uv\7U\2\2v")
        buf.write("w\7J\2\2wx\7Q\2\2xy\7Y\2\2y\6\3\2\2\2z{\7F\2\2{|\7C\2")
        buf.write("\2|}\7V\2\2}~\7C\2\2~\177\7D\2\2\177\u0080\7C\2\2\u0080")
        buf.write("\u0081\7U\2\2\u0081\u0082\7G\2\2\u0082\u0083\7U\2\2\u0083")
        buf.write("\b\3\2\2\2\u0084\u0085\7E\2\2\u0085\u0086\7T\2\2\u0086")
        buf.write("\u0087\7G\2\2\u0087\u0088\7C\2\2\u0088\u0089\7V\2\2\u0089")
        buf.write("\u008a\7G\2\2\u008a\n\3\2\2\2\u008b\u008c\7F\2\2\u008c")
        buf.write("\u008d\7C\2\2\u008d\u008e\7V\2\2\u008e\u008f\7C\2\2\u008f")
        buf.write("\u0090\7D\2\2\u0090\u0091\7C\2\2\u0091\u0092\7U\2\2\u0092")
        buf.write("\u0093\7G\2\2\u0093\f\3\2\2\2\u0094\u0095\7F\2\2\u0095")
        buf.write("\u0096\7T\2\2\u0096\u0097\7Q\2\2\u0097\u0098\7R\2\2\u0098")
        buf.write("\16\3\2\2\2\u0099\u009a\7W\2\2\u009a\u009b\7U\2\2\u009b")
        buf.write("\u009c\7G\2\2\u009c\20\3\2\2\2\u009d\u009e\7V\2\2\u009e")
        buf.write("\u009f\7C\2\2\u009f\u00a0\7D\2\2\u00a0\u00a1\7N\2\2\u00a1")
        buf.write("\u00a2\7G\2\2\u00a2\u00a3\7U\2\2\u00a3\22\3\2\2\2\u00a4")
        buf.write("\u00a5\7V\2\2\u00a5\u00a6\7C\2\2\u00a6\u00a7\7D\2\2\u00a7")
        buf.write("\u00a8\7N\2\2\u00a8\u00a9\7G\2\2\u00a9\24\3\2\2\2\u00aa")
        buf.write("\u00ab\7*\2\2\u00ab\26\3\2\2\2\u00ac\u00ad\7+\2\2\u00ad")
        buf.write("\30\3\2\2\2\u00ae\u00af\7F\2\2\u00af\u00b0\7G\2\2\u00b0")
        buf.write("\u00b1\7U\2\2\u00b1\u00b2\7E\2\2\u00b2\32\3\2\2\2\u00b3")
        buf.write("\u00b4\7K\2\2\u00b4\u00b5\7P\2\2\u00b5\u00b6\7U\2\2\u00b6")
        buf.write("\u00b7\7G\2\2\u00b7\u00b8\7T\2\2\u00b8\u00b9\7V\2\2\u00b9")
        buf.write("\34\3\2\2\2\u00ba\u00bb\7K\2\2\u00bb\u00bc\7P\2\2\u00bc")
        buf.write("\u00bd\7V\2\2\u00bd\u00be\7Q\2\2\u00be\36\3\2\2\2\u00bf")
        buf.write("\u00c0\7X\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2\7N\2\2\u00c2")
        buf.write("\u00c3\7W\2\2\u00c3\u00c4\7G\2\2\u00c4\u00c5\7U\2\2\u00c5")
        buf.write(" \3\2\2\2\u00c6\u00c7\7F\2\2\u00c7\u00c8\7G\2\2\u00c8")
        buf.write("\u00c9\7N\2\2\u00c9\u00ca\7G\2\2\u00ca\u00cb\7V\2\2\u00cb")
        buf.write("\u00cc\7G\2\2\u00cc\"\3\2\2\2\u00cd\u00ce\7H\2\2\u00ce")
        buf.write("\u00cf\7T\2\2\u00cf\u00d0\7Q\2\2\u00d0\u00d1\7O\2\2\u00d1")
        buf.write("$\3\2\2\2\u00d2\u00d3\7Y\2\2\u00d3\u00d4\7J\2\2\u00d4")
        buf.write("\u00d5\7G\2\2\u00d5\u00d6\7T\2\2\u00d6\u00d7\7G\2\2\u00d7")
        buf.write("&\3\2\2\2\u00d8\u00d9\7W\2\2\u00d9\u00da\7R\2\2\u00da")
        buf.write("\u00db\7F\2\2\u00db\u00dc\7C\2\2\u00dc\u00dd\7V\2\2\u00dd")
        buf.write("\u00de\7G\2\2\u00de(\3\2\2\2\u00df\u00e0\7U\2\2\u00e0")
        buf.write("\u00e1\7G\2\2\u00e1\u00e2\7V\2\2\u00e2*\3\2\2\2\u00e3")
        buf.write("\u00e4\7U\2\2\u00e4\u00e5\7G\2\2\u00e5\u00e6\7N\2\2\u00e6")
        buf.write("\u00e7\7G\2\2\u00e7\u00e8\7E\2\2\u00e8\u00e9\7V\2\2\u00e9")
        buf.write(",\3\2\2\2\u00ea\u00eb\7K\2\2\u00eb\u00ec\7P\2\2\u00ec")
        buf.write("\u00ed\7F\2\2\u00ed\u00ee\7G\2\2\u00ee\u00ef\7Z\2\2\u00ef")
        buf.write(".\3\2\2\2\u00f0\u00f1\7Q\2\2\u00f1\u00f2\7P\2\2\u00f2")
        buf.write("\60\3\2\2\2\u00f3\u00f4\7C\2\2\u00f4\u00f5\7N\2\2\u00f5")
        buf.write("\u00f6\7V\2\2\u00f6\u00f7\7G\2\2\u00f7\u00f8\7T\2\2\u00f8")
        buf.write("\62\3\2\2\2\u00f9\u00fa\7C\2\2\u00fa\u00fb\7F\2\2\u00fb")
        buf.write("\u00fc\7F\2\2\u00fc\64\3\2\2\2\u00fd\u00fe\7E\2\2\u00fe")
        buf.write("\u00ff\7J\2\2\u00ff\u0100\7C\2\2\u0100\u0101\7P\2\2\u0101")
        buf.write("\u0102\7I\2\2\u0102\u0103\7G\2\2\u0103\66\3\2\2\2\u0104")
        buf.write("\u0105\7T\2\2\u0105\u0106\7G\2\2\u0106\u0107\7P\2\2\u0107")
        buf.write("\u0108\7C\2\2\u0108\u0109\7O\2\2\u0109\u010a\7G\2\2\u010a")
        buf.write("8\3\2\2\2\u010b\u010c\7V\2\2\u010c\u010d\7Q\2\2\u010d")
        buf.write(":\3\2\2\2\u010e\u010f\7R\2\2\u010f\u0110\7T\2\2\u0110")
        buf.write("\u0111\7K\2\2\u0111\u0112\7O\2\2\u0112\u0113\7C\2\2\u0113")
        buf.write("\u0114\7T\2\2\u0114\u0115\7[\2\2\u0115<\3\2\2\2\u0116")
        buf.write("\u0117\7M\2\2\u0117\u0118\7G\2\2\u0118\u0119\7[\2\2\u0119")
        buf.write(">\3\2\2\2\u011a\u011b\7H\2\2\u011b\u011c\7Q\2\2\u011c")
        buf.write("\u011d\7T\2\2\u011d\u011e\7G\2\2\u011e\u011f\7K\2\2\u011f")
        buf.write("\u0120\7I\2\2\u0120\u0121\7P\2\2\u0121@\3\2\2\2\u0122")
        buf.write("\u0123\7E\2\2\u0123\u0124\7Q\2\2\u0124\u0125\7P\2\2\u0125")
        buf.write("\u0126\7U\2\2\u0126\u0127\7V\2\2\u0127\u0128\7T\2\2\u0128")
        buf.write("\u0129\7C\2\2\u0129\u012a\7K\2\2\u012a\u012b\7P\2\2\u012b")
        buf.write("\u012c\7V\2\2\u012cB\3\2\2\2\u012d\u012e\7T\2\2\u012e")
        buf.write("\u012f\7G\2\2\u012f\u0130\7H\2\2\u0130\u0131\7G\2\2\u0131")
        buf.write("\u0132\7T\2\2\u0132\u0133\7G\2\2\u0133\u0134\7P\2\2\u0134")
        buf.write("\u0135\7E\2\2\u0135\u0136\7G\2\2\u0136\u0137\7U\2\2\u0137")
        buf.write("D\3\2\2\2\u0138\u0139\7.\2\2\u0139F\3\2\2\2\u013a\u013b")
        buf.write("\7P\2\2\u013b\u013c\7Q\2\2\u013c\u013d\7V\2\2\u013dH\3")
        buf.write("\2\2\2\u013e\u013f\7P\2\2\u013f\u0140\7W\2\2\u0140\u0141")
        buf.write("\7N\2\2\u0141\u0142\7N\2\2\u0142J\3\2\2\2\u0143\u0144")
        buf.write("\7F\2\2\u0144\u0145\7G\2\2\u0145\u0146\7H\2\2\u0146\u0147")
        buf.write("\7C\2\2\u0147\u0148\7W\2\2\u0148\u0149\7N\2\2\u0149\u014a")
        buf.write("\7V\2\2\u014aL\3\2\2\2\u014b\u014c\7K\2\2\u014c\u014d")
        buf.write("\7P\2\2\u014d\u014e\7V\2\2\u014eN\3\2\2\2\u014f\u0150")
        buf.write("\7X\2\2\u0150\u0151\7C\2\2\u0151\u0152\7T\2\2\u0152\u0153")
        buf.write("\7E\2\2\u0153\u0154\7J\2\2\u0154\u0155\7C\2\2\u0155\u0156")
        buf.write("\7T\2\2\u0156P\3\2\2\2\u0157\u0158\7F\2\2\u0158\u0159")
        buf.write("\7C\2\2\u0159\u015a\7V\2\2\u015a\u015b\7G\2\2\u015bR\3")
        buf.write("\2\2\2\u015c\u015d\7H\2\2\u015d\u015e\7N\2\2\u015e\u015f")
        buf.write("\7Q\2\2\u015f\u0160\7C\2\2\u0160\u0161\7V\2\2\u0161T\3")
        buf.write("\2\2\2\u0162\u0163\7C\2\2\u0163\u0164\7P\2\2\u0164\u0165")
        buf.write("\7F\2\2\u0165V\3\2\2\2\u0166\u0167\7K\2\2\u0167\u0168")
        buf.write("\7U\2\2\u0168X\3\2\2\2\u0169\u016a\7\60\2\2\u016aZ\3\2")
        buf.write("\2\2\u016b\u016c\7,\2\2\u016c\\\3\2\2\2\u016d\u016e\7")
        buf.write("?\2\2\u016e^\3\2\2\2\u016f\u0170\7>\2\2\u0170`\3\2\2\2")
        buf.write("\u0171\u0172\7>\2\2\u0172\u0173\7?\2\2\u0173b\3\2\2\2")
        buf.write("\u0174\u0175\7@\2\2\u0175d\3\2\2\2\u0176\u0177\7@\2\2")
        buf.write("\u0177\u0178\7?\2\2\u0178f\3\2\2\2\u0179\u017a\7>\2\2")
        buf.write("\u017a\u017b\7@\2\2\u017bh\3\2\2\2\u017c\u0180\t\2\2\2")
        buf.write("\u017d\u017f\t\3\2\2\u017e\u017d\3\2\2\2\u017f\u0182\3")
        buf.write("\2\2\2\u0180\u017e\3\2\2\2\u0180\u0181\3\2\2\2\u0181j")
        buf.write("\3\2\2\2\u0182\u0180\3\2\2\2\u0183\u0185\t\4\2\2\u0184")
        buf.write("\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0184\3\2\2\2")
        buf.write("\u0186\u0187\3\2\2\2\u0187l\3\2\2\2\u0188\u018c\7)\2\2")
        buf.write("\u0189\u018b\n\5\2\2\u018a\u0189\3\2\2\2\u018b\u018e\3")
        buf.write("\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018f")
        buf.write("\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0190\7)\2\2\u0190")
        buf.write("n\3\2\2\2\u0191\u0193\7/\2\2\u0192\u0191\3\2\2\2\u0192")
        buf.write("\u0193\3\2\2\2\u0193\u0195\3\2\2\2\u0194\u0196\t\4\2\2")
        buf.write("\u0195\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0195\3")
        buf.write("\2\2\2\u0197\u0198\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u019d")
        buf.write("\7\60\2\2\u019a\u019c\t\4\2\2\u019b\u019a\3\2\2\2\u019c")
        buf.write("\u019f\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2")
        buf.write("\u019ep\3\2\2\2\u019f\u019d\3\2\2\2\u01a0\u01a2\t\6\2")
        buf.write("\2\u01a1\u01a0\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a1")
        buf.write("\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5")
        buf.write("\u01a6\b9\2\2\u01a6r\3\2\2\2\n\2\u0180\u0186\u018c\u0192")
        buf.write("\u0197\u019d\u01a3\3\b\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    EqualOrAssign = 46
    Less = 47
    LessEqual = 48
    Greater = 49
    GreaterEqual = 50
    NotEqual = 51
    Identifier = 52
    Integer = 53
    String = 54
    Float = 55
    Whitespace = 56

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'INDEX'", "'ON'", "'ALTER'", "'ADD'", 
            "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", "'FOREIGN'", 
            "'CONSTRAINT'", "'REFERENCES'", "','", "'NOT'", "'NULL'", "'DEFAULT'", 
            "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", "'IS'", 
            "'.'", "'*'", "'='", "'<'", "'<='", "'>'", "'>='", "'<>'" ]

    symbolicNames = [ "<INVALID>",
            "EqualOrAssign", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "NotEqual", "Identifier", "Integer", "String", "Float", "Whitespace" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "EqualOrAssign", "Less", "LessEqual", "Greater", 
                  "GreaterEqual", "NotEqual", "Identifier", "Integer", "String", 
                  "Float", "Whitespace" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


