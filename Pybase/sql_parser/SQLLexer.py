# Generated from SQL.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\66")
        buf.write("\u019c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5")
        buf.write("\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3")
        buf.write("\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(")
        buf.write("\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3")
        buf.write("+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\60")
        buf.write("\3\60\3\60\3\60\5\60\u0170\n\60\3\61\3\61\7\61\u0174\n")
        buf.write("\61\f\61\16\61\u0177\13\61\3\62\6\62\u017a\n\62\r\62\16")
        buf.write("\62\u017b\3\63\3\63\7\63\u0180\n\63\f\63\16\63\u0183\13")
        buf.write("\63\3\63\3\63\3\64\5\64\u0188\n\64\3\64\6\64\u018b\n\64")
        buf.write("\r\64\16\64\u018c\3\64\3\64\7\64\u0191\n\64\f\64\16\64")
        buf.write("\u0194\13\64\3\65\6\65\u0197\n\65\r\65\16\65\u0198\3\65")
        buf.write("\3\65\2\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13")
        buf.write("\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26")
        buf.write("+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#")
        buf.write("E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66")
        buf.write("\3\2\b\4\2>>@@\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\3\2)")
        buf.write(")\5\2\13\f\17\17\"\"\2\u01a6\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2\2")
        buf.write("\5m\3\2\2\2\7r\3\2\2\2\t|\3\2\2\2\13\u0083\3\2\2\2\r\u008c")
        buf.write("\3\2\2\2\17\u0091\3\2\2\2\21\u0095\3\2\2\2\23\u009c\3")
        buf.write("\2\2\2\25\u00a2\3\2\2\2\27\u00a4\3\2\2\2\31\u00a6\3\2")
        buf.write("\2\2\33\u00ab\3\2\2\2\35\u00b2\3\2\2\2\37\u00b7\3\2\2")
        buf.write("\2!\u00be\3\2\2\2#\u00c5\3\2\2\2%\u00ca\3\2\2\2\'\u00d0")
        buf.write("\3\2\2\2)\u00d7\3\2\2\2+\u00db\3\2\2\2-\u00e2\3\2\2\2")
        buf.write("/\u00e8\3\2\2\2\61\u00eb\3\2\2\2\63\u00f1\3\2\2\2\65\u00f5")
        buf.write("\3\2\2\2\67\u00fc\3\2\2\29\u0103\3\2\2\2;\u0106\3\2\2")
        buf.write("\2=\u010e\3\2\2\2?\u0112\3\2\2\2A\u011a\3\2\2\2C\u0125")
        buf.write("\3\2\2\2E\u0130\3\2\2\2G\u0132\3\2\2\2I\u0136\3\2\2\2")
        buf.write("K\u013b\3\2\2\2M\u0143\3\2\2\2O\u0147\3\2\2\2Q\u014f\3")
        buf.write("\2\2\2S\u0154\3\2\2\2U\u015a\3\2\2\2W\u015e\3\2\2\2Y\u0161")
        buf.write("\3\2\2\2[\u0163\3\2\2\2]\u0165\3\2\2\2_\u016f\3\2\2\2")
        buf.write("a\u0171\3\2\2\2c\u0179\3\2\2\2e\u017d\3\2\2\2g\u0187\3")
        buf.write("\2\2\2i\u0196\3\2\2\2kl\7=\2\2l\4\3\2\2\2mn\7U\2\2no\7")
        buf.write("J\2\2op\7Q\2\2pq\7Y\2\2q\6\3\2\2\2rs\7F\2\2st\7C\2\2t")
        buf.write("u\7V\2\2uv\7C\2\2vw\7D\2\2wx\7C\2\2xy\7U\2\2yz\7G\2\2")
        buf.write("z{\7U\2\2{\b\3\2\2\2|}\7E\2\2}~\7T\2\2~\177\7G\2\2\177")
        buf.write("\u0080\7C\2\2\u0080\u0081\7V\2\2\u0081\u0082\7G\2\2\u0082")
        buf.write("\n\3\2\2\2\u0083\u0084\7F\2\2\u0084\u0085\7C\2\2\u0085")
        buf.write("\u0086\7V\2\2\u0086\u0087\7C\2\2\u0087\u0088\7D\2\2\u0088")
        buf.write("\u0089\7C\2\2\u0089\u008a\7U\2\2\u008a\u008b\7G\2\2\u008b")
        buf.write("\f\3\2\2\2\u008c\u008d\7F\2\2\u008d\u008e\7T\2\2\u008e")
        buf.write("\u008f\7Q\2\2\u008f\u0090\7R\2\2\u0090\16\3\2\2\2\u0091")
        buf.write("\u0092\7W\2\2\u0092\u0093\7U\2\2\u0093\u0094\7G\2\2\u0094")
        buf.write("\20\3\2\2\2\u0095\u0096\7V\2\2\u0096\u0097\7C\2\2\u0097")
        buf.write("\u0098\7D\2\2\u0098\u0099\7N\2\2\u0099\u009a\7G\2\2\u009a")
        buf.write("\u009b\7U\2\2\u009b\22\3\2\2\2\u009c\u009d\7V\2\2\u009d")
        buf.write("\u009e\7C\2\2\u009e\u009f\7D\2\2\u009f\u00a0\7N\2\2\u00a0")
        buf.write("\u00a1\7G\2\2\u00a1\24\3\2\2\2\u00a2\u00a3\7*\2\2\u00a3")
        buf.write("\26\3\2\2\2\u00a4\u00a5\7+\2\2\u00a5\30\3\2\2\2\u00a6")
        buf.write("\u00a7\7F\2\2\u00a7\u00a8\7G\2\2\u00a8\u00a9\7U\2\2\u00a9")
        buf.write("\u00aa\7E\2\2\u00aa\32\3\2\2\2\u00ab\u00ac\7K\2\2\u00ac")
        buf.write("\u00ad\7P\2\2\u00ad\u00ae\7U\2\2\u00ae\u00af\7G\2\2\u00af")
        buf.write("\u00b0\7T\2\2\u00b0\u00b1\7V\2\2\u00b1\34\3\2\2\2\u00b2")
        buf.write("\u00b3\7K\2\2\u00b3\u00b4\7P\2\2\u00b4\u00b5\7V\2\2\u00b5")
        buf.write("\u00b6\7Q\2\2\u00b6\36\3\2\2\2\u00b7\u00b8\7X\2\2\u00b8")
        buf.write("\u00b9\7C\2\2\u00b9\u00ba\7N\2\2\u00ba\u00bb\7W\2\2\u00bb")
        buf.write("\u00bc\7G\2\2\u00bc\u00bd\7U\2\2\u00bd \3\2\2\2\u00be")
        buf.write("\u00bf\7F\2\2\u00bf\u00c0\7G\2\2\u00c0\u00c1\7N\2\2\u00c1")
        buf.write("\u00c2\7G\2\2\u00c2\u00c3\7V\2\2\u00c3\u00c4\7G\2\2\u00c4")
        buf.write("\"\3\2\2\2\u00c5\u00c6\7H\2\2\u00c6\u00c7\7T\2\2\u00c7")
        buf.write("\u00c8\7Q\2\2\u00c8\u00c9\7O\2\2\u00c9$\3\2\2\2\u00ca")
        buf.write("\u00cb\7Y\2\2\u00cb\u00cc\7J\2\2\u00cc\u00cd\7G\2\2\u00cd")
        buf.write("\u00ce\7T\2\2\u00ce\u00cf\7G\2\2\u00cf&\3\2\2\2\u00d0")
        buf.write("\u00d1\7W\2\2\u00d1\u00d2\7R\2\2\u00d2\u00d3\7F\2\2\u00d3")
        buf.write("\u00d4\7C\2\2\u00d4\u00d5\7V\2\2\u00d5\u00d6\7G\2\2\u00d6")
        buf.write("(\3\2\2\2\u00d7\u00d8\7U\2\2\u00d8\u00d9\7G\2\2\u00d9")
        buf.write("\u00da\7V\2\2\u00da*\3\2\2\2\u00db\u00dc\7U\2\2\u00dc")
        buf.write("\u00dd\7G\2\2\u00dd\u00de\7N\2\2\u00de\u00df\7G\2\2\u00df")
        buf.write("\u00e0\7E\2\2\u00e0\u00e1\7V\2\2\u00e1,\3\2\2\2\u00e2")
        buf.write("\u00e3\7K\2\2\u00e3\u00e4\7P\2\2\u00e4\u00e5\7F\2\2\u00e5")
        buf.write("\u00e6\7G\2\2\u00e6\u00e7\7Z\2\2\u00e7.\3\2\2\2\u00e8")
        buf.write("\u00e9\7Q\2\2\u00e9\u00ea\7P\2\2\u00ea\60\3\2\2\2\u00eb")
        buf.write("\u00ec\7C\2\2\u00ec\u00ed\7N\2\2\u00ed\u00ee\7V\2\2\u00ee")
        buf.write("\u00ef\7G\2\2\u00ef\u00f0\7T\2\2\u00f0\62\3\2\2\2\u00f1")
        buf.write("\u00f2\7C\2\2\u00f2\u00f3\7F\2\2\u00f3\u00f4\7F\2\2\u00f4")
        buf.write("\64\3\2\2\2\u00f5\u00f6\7E\2\2\u00f6\u00f7\7J\2\2\u00f7")
        buf.write("\u00f8\7C\2\2\u00f8\u00f9\7P\2\2\u00f9\u00fa\7I\2\2\u00fa")
        buf.write("\u00fb\7G\2\2\u00fb\66\3\2\2\2\u00fc\u00fd\7T\2\2\u00fd")
        buf.write("\u00fe\7G\2\2\u00fe\u00ff\7P\2\2\u00ff\u0100\7C\2\2\u0100")
        buf.write("\u0101\7O\2\2\u0101\u0102\7G\2\2\u01028\3\2\2\2\u0103")
        buf.write("\u0104\7V\2\2\u0104\u0105\7Q\2\2\u0105:\3\2\2\2\u0106")
        buf.write("\u0107\7R\2\2\u0107\u0108\7T\2\2\u0108\u0109\7K\2\2\u0109")
        buf.write("\u010a\7O\2\2\u010a\u010b\7C\2\2\u010b\u010c\7T\2\2\u010c")
        buf.write("\u010d\7[\2\2\u010d<\3\2\2\2\u010e\u010f\7M\2\2\u010f")
        buf.write("\u0110\7G\2\2\u0110\u0111\7[\2\2\u0111>\3\2\2\2\u0112")
        buf.write("\u0113\7H\2\2\u0113\u0114\7Q\2\2\u0114\u0115\7T\2\2\u0115")
        buf.write("\u0116\7G\2\2\u0116\u0117\7K\2\2\u0117\u0118\7I\2\2\u0118")
        buf.write("\u0119\7P\2\2\u0119@\3\2\2\2\u011a\u011b\7E\2\2\u011b")
        buf.write("\u011c\7Q\2\2\u011c\u011d\7P\2\2\u011d\u011e\7U\2\2\u011e")
        buf.write("\u011f\7V\2\2\u011f\u0120\7T\2\2\u0120\u0121\7C\2\2\u0121")
        buf.write("\u0122\7K\2\2\u0122\u0123\7P\2\2\u0123\u0124\7V\2\2\u0124")
        buf.write("B\3\2\2\2\u0125\u0126\7T\2\2\u0126\u0127\7G\2\2\u0127")
        buf.write("\u0128\7H\2\2\u0128\u0129\7G\2\2\u0129\u012a\7T\2\2\u012a")
        buf.write("\u012b\7G\2\2\u012b\u012c\7P\2\2\u012c\u012d\7E\2\2\u012d")
        buf.write("\u012e\7G\2\2\u012e\u012f\7U\2\2\u012fD\3\2\2\2\u0130")
        buf.write("\u0131\7.\2\2\u0131F\3\2\2\2\u0132\u0133\7P\2\2\u0133")
        buf.write("\u0134\7Q\2\2\u0134\u0135\7V\2\2\u0135H\3\2\2\2\u0136")
        buf.write("\u0137\7P\2\2\u0137\u0138\7W\2\2\u0138\u0139\7N\2\2\u0139")
        buf.write("\u013a\7N\2\2\u013aJ\3\2\2\2\u013b\u013c\7F\2\2\u013c")
        buf.write("\u013d\7G\2\2\u013d\u013e\7H\2\2\u013e\u013f\7C\2\2\u013f")
        buf.write("\u0140\7W\2\2\u0140\u0141\7N\2\2\u0141\u0142\7V\2\2\u0142")
        buf.write("L\3\2\2\2\u0143\u0144\7K\2\2\u0144\u0145\7P\2\2\u0145")
        buf.write("\u0146\7V\2\2\u0146N\3\2\2\2\u0147\u0148\7X\2\2\u0148")
        buf.write("\u0149\7C\2\2\u0149\u014a\7T\2\2\u014a\u014b\7E\2\2\u014b")
        buf.write("\u014c\7J\2\2\u014c\u014d\7C\2\2\u014d\u014e\7T\2\2\u014e")
        buf.write("P\3\2\2\2\u014f\u0150\7F\2\2\u0150\u0151\7C\2\2\u0151")
        buf.write("\u0152\7V\2\2\u0152\u0153\7G\2\2\u0153R\3\2\2\2\u0154")
        buf.write("\u0155\7H\2\2\u0155\u0156\7N\2\2\u0156\u0157\7Q\2\2\u0157")
        buf.write("\u0158\7C\2\2\u0158\u0159\7V\2\2\u0159T\3\2\2\2\u015a")
        buf.write("\u015b\7C\2\2\u015b\u015c\7P\2\2\u015c\u015d\7F\2\2\u015d")
        buf.write("V\3\2\2\2\u015e\u015f\7K\2\2\u015f\u0160\7U\2\2\u0160")
        buf.write("X\3\2\2\2\u0161\u0162\7\60\2\2\u0162Z\3\2\2\2\u0163\u0164")
        buf.write("\7?\2\2\u0164\\\3\2\2\2\u0165\u0166\7,\2\2\u0166^\3\2")
        buf.write("\2\2\u0167\u0170\7?\2\2\u0168\u0169\7>\2\2\u0169\u0170")
        buf.write("\7@\2\2\u016a\u016b\7>\2\2\u016b\u0170\7?\2\2\u016c\u016d")
        buf.write("\7@\2\2\u016d\u0170\7?\2\2\u016e\u0170\t\2\2\2\u016f\u0167")
        buf.write("\3\2\2\2\u016f\u0168\3\2\2\2\u016f\u016a\3\2\2\2\u016f")
        buf.write("\u016c\3\2\2\2\u016f\u016e\3\2\2\2\u0170`\3\2\2\2\u0171")
        buf.write("\u0175\t\3\2\2\u0172\u0174\t\4\2\2\u0173\u0172\3\2\2\2")
        buf.write("\u0174\u0177\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3")
        buf.write("\2\2\2\u0176b\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017a")
        buf.write("\t\5\2\2\u0179\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b")
        buf.write("\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017cd\3\2\2\2\u017d")
        buf.write("\u0181\7)\2\2\u017e\u0180\n\6\2\2\u017f\u017e\3\2\2\2")
        buf.write("\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3")
        buf.write("\2\2\2\u0182\u0184\3\2\2\2\u0183\u0181\3\2\2\2\u0184\u0185")
        buf.write("\7)\2\2\u0185f\3\2\2\2\u0186\u0188\7/\2\2\u0187\u0186")
        buf.write("\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u018a\3\2\2\2\u0189")
        buf.write("\u018b\t\5\2\2\u018a\u0189\3\2\2\2\u018b\u018c\3\2\2\2")
        buf.write("\u018c\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018e\3")
        buf.write("\2\2\2\u018e\u0192\7\60\2\2\u018f\u0191\t\5\2\2\u0190")
        buf.write("\u018f\3\2\2\2\u0191\u0194\3\2\2\2\u0192\u0190\3\2\2\2")
        buf.write("\u0192\u0193\3\2\2\2\u0193h\3\2\2\2\u0194\u0192\3\2\2")
        buf.write("\2\u0195\u0197\t\7\2\2\u0196\u0195\3\2\2\2\u0197\u0198")
        buf.write("\3\2\2\2\u0198\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199")
        buf.write("\u019a\3\2\2\2\u019a\u019b\b\65\2\2\u019bj\3\2\2\2\13")
        buf.write("\2\u016f\u0175\u017b\u0181\u0187\u018c\u0192\u0198\3\b")
        buf.write("\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    Operator = 47
    Identifier = 48
    Integer = 49
    String = 50
    Float = 51
    Whitespace = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'INDEX'", "'ON'", "'ALTER'", "'ADD'", 
            "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", "'FOREIGN'", 
            "'CONSTRAINT'", "'REFERENCES'", "','", "'NOT'", "'NULL'", "'DEFAULT'", 
            "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", "'IS'", 
            "'.'", "'='", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "Operator", "Identifier", "Integer", "String", "Float", "Whitespace" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "Operator", "Identifier", "Integer", 
                  "String", "Float", "Whitespace" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


