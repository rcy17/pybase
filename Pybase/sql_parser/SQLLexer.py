# Generated from SQL.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2C")
        buf.write("\u01e3\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3")
        buf.write("\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34")
        buf.write("\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3")
        buf.write("$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3")
        buf.write("*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3")
        buf.write(".\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3")
        buf.write("\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\67")
        buf.write("\3\67\3\67\38\38\38\38\38\38\39\39\39\39\3:\3:\3:\3:\3")
        buf.write(";\3;\3;\3;\3<\3<\3<\3<\3<\3=\3=\7=\u01b4\n=\f=\16=\u01b7")
        buf.write("\13=\3>\6>\u01ba\n>\r>\16>\u01bb\3?\3?\7?\u01c0\n?\f?")
        buf.write("\16?\u01c3\13?\3?\3?\3@\5@\u01c8\n@\3@\6@\u01cb\n@\r@")
        buf.write("\16@\u01cc\3@\3@\7@\u01d1\n@\f@\16@\u01d4\13@\3A\6A\u01d7")
        buf.write("\nA\rA\16A\u01d8\3A\3A\3B\3B\3B\6B\u01e0\nB\rB\16B\u01e1")
        buf.write("\2\2C\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q")
        buf.write(":s;u<w=y>{?}@\177A\u0081B\u0083C\3\2\b\5\2C\\aac|\6\2")
        buf.write("\62;C\\aac|\3\2\62;\3\2))\5\2\13\f\17\17\"\"\3\2==\2\u01ea")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2")
        buf.write("{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083")
        buf.write("\3\2\2\2\3\u0085\3\2\2\2\5\u0087\3\2\2\2\7\u008c\3\2\2")
        buf.write("\2\t\u0096\3\2\2\2\13\u009d\3\2\2\2\r\u00a6\3\2\2\2\17")
        buf.write("\u00ab\3\2\2\2\21\u00af\3\2\2\2\23\u00b6\3\2\2\2\25\u00bc")
        buf.write("\3\2\2\2\27\u00be\3\2\2\2\31\u00c0\3\2\2\2\33\u00c5\3")
        buf.write("\2\2\2\35\u00cc\3\2\2\2\37\u00d1\3\2\2\2!\u00d8\3\2\2")
        buf.write("\2#\u00df\3\2\2\2%\u00e4\3\2\2\2\'\u00ea\3\2\2\2)\u00f1")
        buf.write("\3\2\2\2+\u00f5\3\2\2\2-\u00fc\3\2\2\2/\u0102\3\2\2\2")
        buf.write("\61\u0105\3\2\2\2\63\u010b\3\2\2\2\65\u010e\3\2\2\2\67")
        buf.write("\u0114\3\2\2\29\u0118\3\2\2\2;\u011f\3\2\2\2=\u0126\3")
        buf.write("\2\2\2?\u0129\3\2\2\2A\u0131\3\2\2\2C\u0135\3\2\2\2E\u013d")
        buf.write("\3\2\2\2G\u0148\3\2\2\2I\u0153\3\2\2\2K\u0155\3\2\2\2")
        buf.write("M\u0159\3\2\2\2O\u0161\3\2\2\2Q\u0165\3\2\2\2S\u016d\3")
        buf.write("\2\2\2U\u0172\3\2\2\2W\u0178\3\2\2\2Y\u017c\3\2\2\2[\u017f")
        buf.write("\3\2\2\2]\u0182\3\2\2\2_\u0187\3\2\2\2a\u0189\3\2\2\2")
        buf.write("c\u018b\3\2\2\2e\u018d\3\2\2\2g\u018f\3\2\2\2i\u0192\3")
        buf.write("\2\2\2k\u0194\3\2\2\2m\u0197\3\2\2\2o\u019a\3\2\2\2q\u01a0")
        buf.write("\3\2\2\2s\u01a4\3\2\2\2u\u01a8\3\2\2\2w\u01ac\3\2\2\2")
        buf.write("y\u01b1\3\2\2\2{\u01b9\3\2\2\2}\u01bd\3\2\2\2\177\u01c7")
        buf.write("\3\2\2\2\u0081\u01d6\3\2\2\2\u0083\u01dc\3\2\2\2\u0085")
        buf.write("\u0086\7=\2\2\u0086\4\3\2\2\2\u0087\u0088\7U\2\2\u0088")
        buf.write("\u0089\7J\2\2\u0089\u008a\7Q\2\2\u008a\u008b\7Y\2\2\u008b")
        buf.write("\6\3\2\2\2\u008c\u008d\7F\2\2\u008d\u008e\7C\2\2\u008e")
        buf.write("\u008f\7V\2\2\u008f\u0090\7C\2\2\u0090\u0091\7D\2\2\u0091")
        buf.write("\u0092\7C\2\2\u0092\u0093\7U\2\2\u0093\u0094\7G\2\2\u0094")
        buf.write("\u0095\7U\2\2\u0095\b\3\2\2\2\u0096\u0097\7E\2\2\u0097")
        buf.write("\u0098\7T\2\2\u0098\u0099\7G\2\2\u0099\u009a\7C\2\2\u009a")
        buf.write("\u009b\7V\2\2\u009b\u009c\7G\2\2\u009c\n\3\2\2\2\u009d")
        buf.write("\u009e\7F\2\2\u009e\u009f\7C\2\2\u009f\u00a0\7V\2\2\u00a0")
        buf.write("\u00a1\7C\2\2\u00a1\u00a2\7D\2\2\u00a2\u00a3\7C\2\2\u00a3")
        buf.write("\u00a4\7U\2\2\u00a4\u00a5\7G\2\2\u00a5\f\3\2\2\2\u00a6")
        buf.write("\u00a7\7F\2\2\u00a7\u00a8\7T\2\2\u00a8\u00a9\7Q\2\2\u00a9")
        buf.write("\u00aa\7R\2\2\u00aa\16\3\2\2\2\u00ab\u00ac\7W\2\2\u00ac")
        buf.write("\u00ad\7U\2\2\u00ad\u00ae\7G\2\2\u00ae\20\3\2\2\2\u00af")
        buf.write("\u00b0\7V\2\2\u00b0\u00b1\7C\2\2\u00b1\u00b2\7D\2\2\u00b2")
        buf.write("\u00b3\7N\2\2\u00b3\u00b4\7G\2\2\u00b4\u00b5\7U\2\2\u00b5")
        buf.write("\22\3\2\2\2\u00b6\u00b7\7V\2\2\u00b7\u00b8\7C\2\2\u00b8")
        buf.write("\u00b9\7D\2\2\u00b9\u00ba\7N\2\2\u00ba\u00bb\7G\2\2\u00bb")
        buf.write("\24\3\2\2\2\u00bc\u00bd\7*\2\2\u00bd\26\3\2\2\2\u00be")
        buf.write("\u00bf\7+\2\2\u00bf\30\3\2\2\2\u00c0\u00c1\7F\2\2\u00c1")
        buf.write("\u00c2\7G\2\2\u00c2\u00c3\7U\2\2\u00c3\u00c4\7E\2\2\u00c4")
        buf.write("\32\3\2\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7\7P\2\2\u00c7")
        buf.write("\u00c8\7U\2\2\u00c8\u00c9\7G\2\2\u00c9\u00ca\7T\2\2\u00ca")
        buf.write("\u00cb\7V\2\2\u00cb\34\3\2\2\2\u00cc\u00cd\7K\2\2\u00cd")
        buf.write("\u00ce\7P\2\2\u00ce\u00cf\7V\2\2\u00cf\u00d0\7Q\2\2\u00d0")
        buf.write("\36\3\2\2\2\u00d1\u00d2\7X\2\2\u00d2\u00d3\7C\2\2\u00d3")
        buf.write("\u00d4\7N\2\2\u00d4\u00d5\7W\2\2\u00d5\u00d6\7G\2\2\u00d6")
        buf.write("\u00d7\7U\2\2\u00d7 \3\2\2\2\u00d8\u00d9\7F\2\2\u00d9")
        buf.write("\u00da\7G\2\2\u00da\u00db\7N\2\2\u00db\u00dc\7G\2\2\u00dc")
        buf.write("\u00dd\7V\2\2\u00dd\u00de\7G\2\2\u00de\"\3\2\2\2\u00df")
        buf.write("\u00e0\7H\2\2\u00e0\u00e1\7T\2\2\u00e1\u00e2\7Q\2\2\u00e2")
        buf.write("\u00e3\7O\2\2\u00e3$\3\2\2\2\u00e4\u00e5\7Y\2\2\u00e5")
        buf.write("\u00e6\7J\2\2\u00e6\u00e7\7G\2\2\u00e7\u00e8\7T\2\2\u00e8")
        buf.write("\u00e9\7G\2\2\u00e9&\3\2\2\2\u00ea\u00eb\7W\2\2\u00eb")
        buf.write("\u00ec\7R\2\2\u00ec\u00ed\7F\2\2\u00ed\u00ee\7C\2\2\u00ee")
        buf.write("\u00ef\7V\2\2\u00ef\u00f0\7G\2\2\u00f0(\3\2\2\2\u00f1")
        buf.write("\u00f2\7U\2\2\u00f2\u00f3\7G\2\2\u00f3\u00f4\7V\2\2\u00f4")
        buf.write("*\3\2\2\2\u00f5\u00f6\7U\2\2\u00f6\u00f7\7G\2\2\u00f7")
        buf.write("\u00f8\7N\2\2\u00f8\u00f9\7G\2\2\u00f9\u00fa\7E\2\2\u00fa")
        buf.write("\u00fb\7V\2\2\u00fb,\3\2\2\2\u00fc\u00fd\7I\2\2\u00fd")
        buf.write("\u00fe\7T\2\2\u00fe\u00ff\7Q\2\2\u00ff\u0100\7W\2\2\u0100")
        buf.write("\u0101\7R\2\2\u0101.\3\2\2\2\u0102\u0103\7D\2\2\u0103")
        buf.write("\u0104\7[\2\2\u0104\60\3\2\2\2\u0105\u0106\7K\2\2\u0106")
        buf.write("\u0107\7P\2\2\u0107\u0108\7F\2\2\u0108\u0109\7G\2\2\u0109")
        buf.write("\u010a\7Z\2\2\u010a\62\3\2\2\2\u010b\u010c\7Q\2\2\u010c")
        buf.write("\u010d\7P\2\2\u010d\64\3\2\2\2\u010e\u010f\7C\2\2\u010f")
        buf.write("\u0110\7N\2\2\u0110\u0111\7V\2\2\u0111\u0112\7G\2\2\u0112")
        buf.write("\u0113\7T\2\2\u0113\66\3\2\2\2\u0114\u0115\7C\2\2\u0115")
        buf.write("\u0116\7F\2\2\u0116\u0117\7F\2\2\u01178\3\2\2\2\u0118")
        buf.write("\u0119\7E\2\2\u0119\u011a\7J\2\2\u011a\u011b\7C\2\2\u011b")
        buf.write("\u011c\7P\2\2\u011c\u011d\7I\2\2\u011d\u011e\7G\2\2\u011e")
        buf.write(":\3\2\2\2\u011f\u0120\7T\2\2\u0120\u0121\7G\2\2\u0121")
        buf.write("\u0122\7P\2\2\u0122\u0123\7C\2\2\u0123\u0124\7O\2\2\u0124")
        buf.write("\u0125\7G\2\2\u0125<\3\2\2\2\u0126\u0127\7V\2\2\u0127")
        buf.write("\u0128\7Q\2\2\u0128>\3\2\2\2\u0129\u012a\7R\2\2\u012a")
        buf.write("\u012b\7T\2\2\u012b\u012c\7K\2\2\u012c\u012d\7O\2\2\u012d")
        buf.write("\u012e\7C\2\2\u012e\u012f\7T\2\2\u012f\u0130\7[\2\2\u0130")
        buf.write("@\3\2\2\2\u0131\u0132\7M\2\2\u0132\u0133\7G\2\2\u0133")
        buf.write("\u0134\7[\2\2\u0134B\3\2\2\2\u0135\u0136\7H\2\2\u0136")
        buf.write("\u0137\7Q\2\2\u0137\u0138\7T\2\2\u0138\u0139\7G\2\2\u0139")
        buf.write("\u013a\7K\2\2\u013a\u013b\7I\2\2\u013b\u013c\7P\2\2\u013c")
        buf.write("D\3\2\2\2\u013d\u013e\7E\2\2\u013e\u013f\7Q\2\2\u013f")
        buf.write("\u0140\7P\2\2\u0140\u0141\7U\2\2\u0141\u0142\7V\2\2\u0142")
        buf.write("\u0143\7T\2\2\u0143\u0144\7C\2\2\u0144\u0145\7K\2\2\u0145")
        buf.write("\u0146\7P\2\2\u0146\u0147\7V\2\2\u0147F\3\2\2\2\u0148")
        buf.write("\u0149\7T\2\2\u0149\u014a\7G\2\2\u014a\u014b\7H\2\2\u014b")
        buf.write("\u014c\7G\2\2\u014c\u014d\7T\2\2\u014d\u014e\7G\2\2\u014e")
        buf.write("\u014f\7P\2\2\u014f\u0150\7E\2\2\u0150\u0151\7G\2\2\u0151")
        buf.write("\u0152\7U\2\2\u0152H\3\2\2\2\u0153\u0154\7.\2\2\u0154")
        buf.write("J\3\2\2\2\u0155\u0156\7P\2\2\u0156\u0157\7Q\2\2\u0157")
        buf.write("\u0158\7V\2\2\u0158L\3\2\2\2\u0159\u015a\7F\2\2\u015a")
        buf.write("\u015b\7G\2\2\u015b\u015c\7H\2\2\u015c\u015d\7C\2\2\u015d")
        buf.write("\u015e\7W\2\2\u015e\u015f\7N\2\2\u015f\u0160\7V\2\2\u0160")
        buf.write("N\3\2\2\2\u0161\u0162\7K\2\2\u0162\u0163\7P\2\2\u0163")
        buf.write("\u0164\7V\2\2\u0164P\3\2\2\2\u0165\u0166\7X\2\2\u0166")
        buf.write("\u0167\7C\2\2\u0167\u0168\7T\2\2\u0168\u0169\7E\2\2\u0169")
        buf.write("\u016a\7J\2\2\u016a\u016b\7C\2\2\u016b\u016c\7T\2\2\u016c")
        buf.write("R\3\2\2\2\u016d\u016e\7F\2\2\u016e\u016f\7C\2\2\u016f")
        buf.write("\u0170\7V\2\2\u0170\u0171\7G\2\2\u0171T\3\2\2\2\u0172")
        buf.write("\u0173\7H\2\2\u0173\u0174\7N\2\2\u0174\u0175\7Q\2\2\u0175")
        buf.write("\u0176\7C\2\2\u0176\u0177\7V\2\2\u0177V\3\2\2\2\u0178")
        buf.write("\u0179\7C\2\2\u0179\u017a\7P\2\2\u017a\u017b\7F\2\2\u017b")
        buf.write("X\3\2\2\2\u017c\u017d\7K\2\2\u017d\u017e\7U\2\2\u017e")
        buf.write("Z\3\2\2\2\u017f\u0180\7K\2\2\u0180\u0181\7P\2\2\u0181")
        buf.write("\\\3\2\2\2\u0182\u0183\7N\2\2\u0183\u0184\7K\2\2\u0184")
        buf.write("\u0185\7M\2\2\u0185\u0186\7G\2\2\u0186^\3\2\2\2\u0187")
        buf.write("\u0188\7\60\2\2\u0188`\3\2\2\2\u0189\u018a\7,\2\2\u018a")
        buf.write("b\3\2\2\2\u018b\u018c\7?\2\2\u018cd\3\2\2\2\u018d\u018e")
        buf.write("\7>\2\2\u018ef\3\2\2\2\u018f\u0190\7>\2\2\u0190\u0191")
        buf.write("\7?\2\2\u0191h\3\2\2\2\u0192\u0193\7@\2\2\u0193j\3\2\2")
        buf.write("\2\u0194\u0195\7@\2\2\u0195\u0196\7?\2\2\u0196l\3\2\2")
        buf.write("\2\u0197\u0198\7>\2\2\u0198\u0199\7@\2\2\u0199n\3\2\2")
        buf.write("\2\u019a\u019b\7E\2\2\u019b\u019c\7Q\2\2\u019c\u019d\7")
        buf.write("W\2\2\u019d\u019e\7P\2\2\u019e\u019f\7V\2\2\u019fp\3\2")
        buf.write("\2\2\u01a0\u01a1\7C\2\2\u01a1\u01a2\7X\2\2\u01a2\u01a3")
        buf.write("\7I\2\2\u01a3r\3\2\2\2\u01a4\u01a5\7O\2\2\u01a5\u01a6")
        buf.write("\7C\2\2\u01a6\u01a7\7Z\2\2\u01a7t\3\2\2\2\u01a8\u01a9")
        buf.write("\7O\2\2\u01a9\u01aa\7K\2\2\u01aa\u01ab\7P\2\2\u01abv\3")
        buf.write("\2\2\2\u01ac\u01ad\7P\2\2\u01ad\u01ae\7W\2\2\u01ae\u01af")
        buf.write("\7N\2\2\u01af\u01b0\7N\2\2\u01b0x\3\2\2\2\u01b1\u01b5")
        buf.write("\t\2\2\2\u01b2\u01b4\t\3\2\2\u01b3\u01b2\3\2\2\2\u01b4")
        buf.write("\u01b7\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2")
        buf.write("\u01b6z\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b8\u01ba\t\4\2")
        buf.write("\2\u01b9\u01b8\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01b9")
        buf.write("\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc|\3\2\2\2\u01bd\u01c1")
        buf.write("\7)\2\2\u01be\u01c0\n\5\2\2\u01bf\u01be\3\2\2\2\u01c0")
        buf.write("\u01c3\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2")
        buf.write("\u01c2\u01c4\3\2\2\2\u01c3\u01c1\3\2\2\2\u01c4\u01c5\7")
        buf.write(")\2\2\u01c5~\3\2\2\2\u01c6\u01c8\7/\2\2\u01c7\u01c6\3")
        buf.write("\2\2\2\u01c7\u01c8\3\2\2\2\u01c8\u01ca\3\2\2\2\u01c9\u01cb")
        buf.write("\t\4\2\2\u01ca\u01c9\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc")
        buf.write("\u01ca\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd\u01ce\3\2\2\2")
        buf.write("\u01ce\u01d2\7\60\2\2\u01cf\u01d1\t\4\2\2\u01d0\u01cf")
        buf.write("\3\2\2\2\u01d1\u01d4\3\2\2\2\u01d2\u01d0\3\2\2\2\u01d2")
        buf.write("\u01d3\3\2\2\2\u01d3\u0080\3\2\2\2\u01d4\u01d2\3\2\2\2")
        buf.write("\u01d5\u01d7\t\6\2\2\u01d6\u01d5\3\2\2\2\u01d7\u01d8\3")
        buf.write("\2\2\2\u01d8\u01d6\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d9\u01da")
        buf.write("\3\2\2\2\u01da\u01db\bA\2\2\u01db\u0082\3\2\2\2\u01dc")
        buf.write("\u01dd\7/\2\2\u01dd\u01df\7/\2\2\u01de\u01e0\n\7\2\2\u01df")
        buf.write("\u01de\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01df\3\2\2\2")
        buf.write("\u01e1\u01e2\3\2\2\2\u01e2\u0084\3\2\2\2\13\2\u01b5\u01bb")
        buf.write("\u01c1\u01c7\u01cc\u01d2\u01d8\u01e1\3\b\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    EqualOrAssign = 49
    Less = 50
    LessEqual = 51
    Greater = 52
    GreaterEqual = 53
    NotEqual = 54
    Count = 55
    Average = 56
    Max = 57
    Min = 58
    Null = 59
    Identifier = 60
    Integer = 61
    String = 62
    Float = 63
    Whitespace = 64
    Annotation = 65

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'GROUP'", "'BY'", "'INDEX'", "'ON'", "'ALTER'", 
            "'ADD'", "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", 
            "'FOREIGN'", "'CONSTRAINT'", "'REFERENCES'", "','", "'NOT'", 
            "'DEFAULT'", "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", 
            "'IS'", "'IN'", "'LIKE'", "'.'", "'*'", "'='", "'<'", "'<='", 
            "'>'", "'>='", "'<>'", "'COUNT'", "'AVG'", "'MAX'", "'MIN'", 
            "'NULL'" ]

    symbolicNames = [ "<INVALID>",
            "EqualOrAssign", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "NotEqual", "Count", "Average", "Max", "Min", "Null", "Identifier", 
            "Integer", "String", "Float", "Whitespace", "Annotation" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "EqualOrAssign", "Less", 
                  "LessEqual", "Greater", "GreaterEqual", "NotEqual", "Count", 
                  "Average", "Max", "Min", "Null", "Identifier", "Integer", 
                  "String", "Float", "Whitespace", "Annotation" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


