# Generated from SQL.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65")
        buf.write("\u018b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b")
        buf.write("\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(")
        buf.write("\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3")
        buf.write(",\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60")
        buf.write("\3\60\5\60\u016e\n\60\3\61\3\61\7\61\u0172\n\61\f\61\16")
        buf.write("\61\u0175\13\61\3\62\6\62\u0178\n\62\r\62\16\62\u0179")
        buf.write("\3\63\3\63\7\63\u017e\n\63\f\63\16\63\u0181\13\63\3\63")
        buf.write("\3\63\3\64\6\64\u0186\n\64\r\64\16\64\u0187\3\64\3\64")
        buf.write("\2\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f")
        buf.write("\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27")
        buf.write("-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%")
        buf.write("I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65\3\2\b\4")
        buf.write("\2>>@@\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\3\2))\5\2\13")
        buf.write("\f\17\17\"\"\2\u0192\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5k\3\2\2\2\7p\3\2")
        buf.write("\2\2\tz\3\2\2\2\13\u0081\3\2\2\2\r\u008a\3\2\2\2\17\u008f")
        buf.write("\3\2\2\2\21\u0093\3\2\2\2\23\u009a\3\2\2\2\25\u00a0\3")
        buf.write("\2\2\2\27\u00a2\3\2\2\2\31\u00a4\3\2\2\2\33\u00a9\3\2")
        buf.write("\2\2\35\u00b0\3\2\2\2\37\u00b5\3\2\2\2!\u00bc\3\2\2\2")
        buf.write("#\u00c3\3\2\2\2%\u00c8\3\2\2\2\'\u00ce\3\2\2\2)\u00d5")
        buf.write("\3\2\2\2+\u00d9\3\2\2\2-\u00e0\3\2\2\2/\u00e6\3\2\2\2")
        buf.write("\61\u00e9\3\2\2\2\63\u00ef\3\2\2\2\65\u00f3\3\2\2\2\67")
        buf.write("\u00fa\3\2\2\29\u0101\3\2\2\2;\u0104\3\2\2\2=\u010c\3")
        buf.write("\2\2\2?\u0110\3\2\2\2A\u011b\3\2\2\2C\u0123\3\2\2\2E\u012e")
        buf.write("\3\2\2\2G\u0130\3\2\2\2I\u0134\3\2\2\2K\u0139\3\2\2\2")
        buf.write("M\u0141\3\2\2\2O\u0145\3\2\2\2Q\u014d\3\2\2\2S\u0152\3")
        buf.write("\2\2\2U\u0158\3\2\2\2W\u015c\3\2\2\2Y\u015f\3\2\2\2[\u0161")
        buf.write("\3\2\2\2]\u0163\3\2\2\2_\u016d\3\2\2\2a\u016f\3\2\2\2")
        buf.write("c\u0177\3\2\2\2e\u017b\3\2\2\2g\u0185\3\2\2\2ij\7=\2\2")
        buf.write("j\4\3\2\2\2kl\7U\2\2lm\7J\2\2mn\7Q\2\2no\7Y\2\2o\6\3\2")
        buf.write("\2\2pq\7F\2\2qr\7C\2\2rs\7V\2\2st\7C\2\2tu\7D\2\2uv\7")
        buf.write("C\2\2vw\7U\2\2wx\7G\2\2xy\7U\2\2y\b\3\2\2\2z{\7E\2\2{")
        buf.write("|\7T\2\2|}\7G\2\2}~\7C\2\2~\177\7V\2\2\177\u0080\7G\2")
        buf.write("\2\u0080\n\3\2\2\2\u0081\u0082\7F\2\2\u0082\u0083\7C\2")
        buf.write("\2\u0083\u0084\7V\2\2\u0084\u0085\7C\2\2\u0085\u0086\7")
        buf.write("D\2\2\u0086\u0087\7C\2\2\u0087\u0088\7U\2\2\u0088\u0089")
        buf.write("\7G\2\2\u0089\f\3\2\2\2\u008a\u008b\7F\2\2\u008b\u008c")
        buf.write("\7T\2\2\u008c\u008d\7Q\2\2\u008d\u008e\7R\2\2\u008e\16")
        buf.write("\3\2\2\2\u008f\u0090\7W\2\2\u0090\u0091\7U\2\2\u0091\u0092")
        buf.write("\7G\2\2\u0092\20\3\2\2\2\u0093\u0094\7V\2\2\u0094\u0095")
        buf.write("\7C\2\2\u0095\u0096\7D\2\2\u0096\u0097\7N\2\2\u0097\u0098")
        buf.write("\7G\2\2\u0098\u0099\7U\2\2\u0099\22\3\2\2\2\u009a\u009b")
        buf.write("\7V\2\2\u009b\u009c\7C\2\2\u009c\u009d\7D\2\2\u009d\u009e")
        buf.write("\7N\2\2\u009e\u009f\7G\2\2\u009f\24\3\2\2\2\u00a0\u00a1")
        buf.write("\7*\2\2\u00a1\26\3\2\2\2\u00a2\u00a3\7+\2\2\u00a3\30\3")
        buf.write("\2\2\2\u00a4\u00a5\7F\2\2\u00a5\u00a6\7G\2\2\u00a6\u00a7")
        buf.write("\7U\2\2\u00a7\u00a8\7E\2\2\u00a8\32\3\2\2\2\u00a9\u00aa")
        buf.write("\7K\2\2\u00aa\u00ab\7P\2\2\u00ab\u00ac\7U\2\2\u00ac\u00ad")
        buf.write("\7G\2\2\u00ad\u00ae\7T\2\2\u00ae\u00af\7V\2\2\u00af\34")
        buf.write("\3\2\2\2\u00b0\u00b1\7K\2\2\u00b1\u00b2\7P\2\2\u00b2\u00b3")
        buf.write("\7V\2\2\u00b3\u00b4\7Q\2\2\u00b4\36\3\2\2\2\u00b5\u00b6")
        buf.write("\7X\2\2\u00b6\u00b7\7C\2\2\u00b7\u00b8\7N\2\2\u00b8\u00b9")
        buf.write("\7W\2\2\u00b9\u00ba\7G\2\2\u00ba\u00bb\7U\2\2\u00bb \3")
        buf.write("\2\2\2\u00bc\u00bd\7F\2\2\u00bd\u00be\7G\2\2\u00be\u00bf")
        buf.write("\7N\2\2\u00bf\u00c0\7G\2\2\u00c0\u00c1\7V\2\2\u00c1\u00c2")
        buf.write("\7G\2\2\u00c2\"\3\2\2\2\u00c3\u00c4\7H\2\2\u00c4\u00c5")
        buf.write("\7T\2\2\u00c5\u00c6\7Q\2\2\u00c6\u00c7\7O\2\2\u00c7$\3")
        buf.write("\2\2\2\u00c8\u00c9\7Y\2\2\u00c9\u00ca\7J\2\2\u00ca\u00cb")
        buf.write("\7G\2\2\u00cb\u00cc\7T\2\2\u00cc\u00cd\7G\2\2\u00cd&\3")
        buf.write("\2\2\2\u00ce\u00cf\7W\2\2\u00cf\u00d0\7R\2\2\u00d0\u00d1")
        buf.write("\7F\2\2\u00d1\u00d2\7C\2\2\u00d2\u00d3\7V\2\2\u00d3\u00d4")
        buf.write("\7G\2\2\u00d4(\3\2\2\2\u00d5\u00d6\7U\2\2\u00d6\u00d7")
        buf.write("\7G\2\2\u00d7\u00d8\7V\2\2\u00d8*\3\2\2\2\u00d9\u00da")
        buf.write("\7U\2\2\u00da\u00db\7G\2\2\u00db\u00dc\7N\2\2\u00dc\u00dd")
        buf.write("\7G\2\2\u00dd\u00de\7E\2\2\u00de\u00df\7V\2\2\u00df,\3")
        buf.write("\2\2\2\u00e0\u00e1\7K\2\2\u00e1\u00e2\7P\2\2\u00e2\u00e3")
        buf.write("\7F\2\2\u00e3\u00e4\7G\2\2\u00e4\u00e5\7Z\2\2\u00e5.\3")
        buf.write("\2\2\2\u00e6\u00e7\7Q\2\2\u00e7\u00e8\7P\2\2\u00e8\60")
        buf.write("\3\2\2\2\u00e9\u00ea\7C\2\2\u00ea\u00eb\7N\2\2\u00eb\u00ec")
        buf.write("\7V\2\2\u00ec\u00ed\7G\2\2\u00ed\u00ee\7T\2\2\u00ee\62")
        buf.write("\3\2\2\2\u00ef\u00f0\7C\2\2\u00f0\u00f1\7F\2\2\u00f1\u00f2")
        buf.write("\7F\2\2\u00f2\64\3\2\2\2\u00f3\u00f4\7E\2\2\u00f4\u00f5")
        buf.write("\7J\2\2\u00f5\u00f6\7C\2\2\u00f6\u00f7\7P\2\2\u00f7\u00f8")
        buf.write("\7I\2\2\u00f8\u00f9\7G\2\2\u00f9\66\3\2\2\2\u00fa\u00fb")
        buf.write("\7T\2\2\u00fb\u00fc\7G\2\2\u00fc\u00fd\7P\2\2\u00fd\u00fe")
        buf.write("\7C\2\2\u00fe\u00ff\7O\2\2\u00ff\u0100\7G\2\2\u01008\3")
        buf.write("\2\2\2\u0101\u0102\7V\2\2\u0102\u0103\7Q\2\2\u0103:\3")
        buf.write("\2\2\2\u0104\u0105\7R\2\2\u0105\u0106\7T\2\2\u0106\u0107")
        buf.write("\7K\2\2\u0107\u0108\7O\2\2\u0108\u0109\7C\2\2\u0109\u010a")
        buf.write("\7T\2\2\u010a\u010b\7[\2\2\u010b<\3\2\2\2\u010c\u010d")
        buf.write("\7M\2\2\u010d\u010e\7G\2\2\u010e\u010f\7[\2\2\u010f>\3")
        buf.write("\2\2\2\u0110\u0111\7E\2\2\u0111\u0112\7Q\2\2\u0112\u0113")
        buf.write("\7P\2\2\u0113\u0114\7U\2\2\u0114\u0115\7V\2\2\u0115\u0116")
        buf.write("\7T\2\2\u0116\u0117\7C\2\2\u0117\u0118\7K\2\2\u0118\u0119")
        buf.write("\7P\2\2\u0119\u011a\7V\2\2\u011a@\3\2\2\2\u011b\u011c")
        buf.write("\7H\2\2\u011c\u011d\7Q\2\2\u011d\u011e\7T\2\2\u011e\u011f")
        buf.write("\7G\2\2\u011f\u0120\7K\2\2\u0120\u0121\7I\2\2\u0121\u0122")
        buf.write("\7P\2\2\u0122B\3\2\2\2\u0123\u0124\7T\2\2\u0124\u0125")
        buf.write("\7G\2\2\u0125\u0126\7H\2\2\u0126\u0127\7G\2\2\u0127\u0128")
        buf.write("\7T\2\2\u0128\u0129\7G\2\2\u0129\u012a\7P\2\2\u012a\u012b")
        buf.write("\7E\2\2\u012b\u012c\7G\2\2\u012c\u012d\7U\2\2\u012dD\3")
        buf.write("\2\2\2\u012e\u012f\7.\2\2\u012fF\3\2\2\2\u0130\u0131\7")
        buf.write("P\2\2\u0131\u0132\7Q\2\2\u0132\u0133\7V\2\2\u0133H\3\2")
        buf.write("\2\2\u0134\u0135\7P\2\2\u0135\u0136\7W\2\2\u0136\u0137")
        buf.write("\7N\2\2\u0137\u0138\7N\2\2\u0138J\3\2\2\2\u0139\u013a")
        buf.write("\7F\2\2\u013a\u013b\7G\2\2\u013b\u013c\7H\2\2\u013c\u013d")
        buf.write("\7C\2\2\u013d\u013e\7W\2\2\u013e\u013f\7N\2\2\u013f\u0140")
        buf.write("\7V\2\2\u0140L\3\2\2\2\u0141\u0142\7K\2\2\u0142\u0143")
        buf.write("\7P\2\2\u0143\u0144\7V\2\2\u0144N\3\2\2\2\u0145\u0146")
        buf.write("\7X\2\2\u0146\u0147\7C\2\2\u0147\u0148\7T\2\2\u0148\u0149")
        buf.write("\7E\2\2\u0149\u014a\7J\2\2\u014a\u014b\7C\2\2\u014b\u014c")
        buf.write("\7T\2\2\u014cP\3\2\2\2\u014d\u014e\7F\2\2\u014e\u014f")
        buf.write("\7C\2\2\u014f\u0150\7V\2\2\u0150\u0151\7G\2\2\u0151R\3")
        buf.write("\2\2\2\u0152\u0153\7H\2\2\u0153\u0154\7N\2\2\u0154\u0155")
        buf.write("\7Q\2\2\u0155\u0156\7C\2\2\u0156\u0157\7V\2\2\u0157T\3")
        buf.write("\2\2\2\u0158\u0159\7C\2\2\u0159\u015a\7P\2\2\u015a\u015b")
        buf.write("\7F\2\2\u015bV\3\2\2\2\u015c\u015d\7K\2\2\u015d\u015e")
        buf.write("\7U\2\2\u015eX\3\2\2\2\u015f\u0160\7\60\2\2\u0160Z\3\2")
        buf.write("\2\2\u0161\u0162\7?\2\2\u0162\\\3\2\2\2\u0163\u0164\7")
        buf.write(",\2\2\u0164^\3\2\2\2\u0165\u016e\7?\2\2\u0166\u0167\7")
        buf.write(">\2\2\u0167\u016e\7@\2\2\u0168\u0169\7>\2\2\u0169\u016e")
        buf.write("\7?\2\2\u016a\u016b\7@\2\2\u016b\u016e\7?\2\2\u016c\u016e")
        buf.write("\t\2\2\2\u016d\u0165\3\2\2\2\u016d\u0166\3\2\2\2\u016d")
        buf.write("\u0168\3\2\2\2\u016d\u016a\3\2\2\2\u016d\u016c\3\2\2\2")
        buf.write("\u016e`\3\2\2\2\u016f\u0173\t\3\2\2\u0170\u0172\t\4\2")
        buf.write("\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171")
        buf.write("\3\2\2\2\u0173\u0174\3\2\2\2\u0174b\3\2\2\2\u0175\u0173")
        buf.write("\3\2\2\2\u0176\u0178\t\5\2\2\u0177\u0176\3\2\2\2\u0178")
        buf.write("\u0179\3\2\2\2\u0179\u0177\3\2\2\2\u0179\u017a\3\2\2\2")
        buf.write("\u017ad\3\2\2\2\u017b\u017f\7)\2\2\u017c\u017e\n\6\2\2")
        buf.write("\u017d\u017c\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u017d\3")
        buf.write("\2\2\2\u017f\u0180\3\2\2\2\u0180\u0182\3\2\2\2\u0181\u017f")
        buf.write("\3\2\2\2\u0182\u0183\7)\2\2\u0183f\3\2\2\2\u0184\u0186")
        buf.write("\t\7\2\2\u0185\u0184\3\2\2\2\u0186\u0187\3\2\2\2\u0187")
        buf.write("\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0189\3\2\2\2")
        buf.write("\u0189\u018a\b\64\2\2\u018ah\3\2\2\2\b\2\u016d\u0173\u0179")
        buf.write("\u017f\u0187\3\b\2\2")
        return buf.getvalue()


class SQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    Operator = 47
    Identifier = 48
    Integer = 49
    String = 50
    Whitespace = 51

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'SHOW'", "'DATABASES'", "'CREATE'", "'DATABASE'", "'DROP'", 
            "'USE'", "'TABLES'", "'TABLE'", "'('", "')'", "'DESC'", "'INSERT'", 
            "'INTO'", "'VALUES'", "'DELETE'", "'FROM'", "'WHERE'", "'UPDATE'", 
            "'SET'", "'SELECT'", "'INDEX'", "'ON'", "'ALTER'", "'ADD'", 
            "'CHANGE'", "'RENAME'", "'TO'", "'PRIMARY'", "'KEY'", "'CONSTRAINT'", 
            "'FOREIGN'", "'REFERENCES'", "','", "'NOT'", "'NULL'", "'DEFAULT'", 
            "'INT'", "'VARCHAR'", "'DATE'", "'FLOAT'", "'AND'", "'IS'", 
            "'.'", "'='", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "Operator", "Identifier", "Integer", "String", "Whitespace" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "Operator", "Identifier", "Integer", 
                  "String", "Whitespace" ]

    grammarFileName = "SQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


